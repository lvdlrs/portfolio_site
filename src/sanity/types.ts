/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type SanityImagePaletteSwatch = {
  _type: "sanity.imagePaletteSwatch";
  background?: string;
  foreground?: string;
  population?: number;
  title?: string;
};

export type SanityImagePalette = {
  _type: "sanity.imagePalette";
  darkMuted?: SanityImagePaletteSwatch;
  lightVibrant?: SanityImagePaletteSwatch;
  darkVibrant?: SanityImagePaletteSwatch;
  vibrant?: SanityImagePaletteSwatch;
  dominant?: SanityImagePaletteSwatch;
  lightMuted?: SanityImagePaletteSwatch;
  muted?: SanityImagePaletteSwatch;
};

export type SanityImageDimensions = {
  _type: "sanity.imageDimensions";
  height?: number;
  width?: number;
  aspectRatio?: number;
};

export type SanityFileAsset = {
  _id: string;
  _type: "sanity.fileAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  source?: SanityAssetSourceData;
};

export type Geopoint = {
  _type: "geopoint";
  lat?: number;
  lng?: number;
  alt?: number;
};

export type ProfileInfo = {
  _type: "profileInfo";
  mediaType: "image" | "video";
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  video?: Video;
  title?: string;
  subtitle?: string;
  content?: SimpleRichText;
  links?: Array<
    {
      _key: string;
    } & Link
  >;
  mediaPlacement: "left" | "right";
  mediaSize: "threefourth" | "default";
  variant: "default" | "alternative";
  layout: "default" | "fullscreen";
};

export type CardSection = {
  _type: "cardSection";
  title?: string;
  content?: SimpleRichText;
  links?: Array<
    {
      _key: string;
    } & Link
  >;
  cards?: Array<{
    icon?: IconManager;
    title?: string;
    content?: SimpleRichText;
    _type: "card";
    _key: string;
  }>;
  variant: "default" | "alternative";
};

export type AccordionSection = {
  _type: "accordionSection";
  title?: string;
  content?: SimpleRichText;
  links?: Array<
    {
      _key: string;
    } & Link
  >;
  items?: Array<{
    title: string;
    content: SimpleRichText;
    _type: "item";
    _key: string;
  }>;
  layout: "default" | "centered ";
};

export type FullWidthImage = {
  _type: "fullWidthImage";
  title?: string;
  content?: SimpleRichText;
  links?: Array<
    {
      _key: string;
    } & Link
  >;
  image: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
};

export type FullWidthVideo = {
  _type: "fullWidthVideo";
  title?: string;
  content?: SimpleRichText;
  links?: Array<
    {
      _key: string;
    } & Link
  >;
  video?: Video;
};

export type TextContent = {
  _type: "textContent";
  title?: string;
  content?: SimpleRichText;
  links?: Array<
    {
      _key: string;
    } & Link
  >;
  alignment: "left" | "center" | "right";
  variant: "default" | "alternative";
  layout?: "default" | "columns";
};

export type TextMedia = {
  _type: "textMedia";
  mediaType: "image" | "video";
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  video?: Video;
  title?: string;
  content?: SimpleRichText;
  links?: Array<
    {
      _key: string;
    } & Link
  >;
  mediaPlacement: "left" | "right";
  mediaSize: "threefourth" | "default";
  variant: "default" | "alternative";
  layout: "default" | "fullscreen";
};

export type Headerlink = {
  _type: "headerlink";
  icon?: IconManager;
  label: string;
  linkType: "internal" | "external";
  internalLink?:
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "page";
      }
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "post";
      }
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "frontPage";
      }
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "archivePage";
      };
  externalLink?: ExternalLink;
};

export type Link = {
  _type: "link";
  label: string;
  linkType: "internal" | "external";
  internalLink?:
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "page";
      }
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "post";
      }
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "frontPage";
      }
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "archivePage";
      };
  externalLink?: ExternalLink;
};

export type Accordion = {
  _type: "accordion";
  title?: string;
  items?: Array<{
    title: string;
    content?: SimpleRichText;
    _type: "item";
    _key: string;
  }>;
};

export type Video = {
  _type: "video";
  title?: string;
  thumbnail?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  videoUrl?: string;
};

export type ExternalLink = {
  _type: "externalLink";
  url: string;
};

export type InternalLink = {
  _type: "internalLink";
  reference?:
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "page";
      }
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "post";
      }
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "frontPage";
      }
    | {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "archivePage";
      };
};

export type Tag = {
  _id: string;
  _type: "tag";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title: string;
  slug: Slug;
};

export type ArchivePage = {
  _id: string;
  _type: "archivePage";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title: string;
  description?: SimpleRichText;
  seo?: Seo;
};

export type FrontPage = {
  _id: string;
  _type: "frontPage";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title?: string;
  pageBuilder?: PageBuilder;
  seo?: Seo;
};

export type Post = {
  _id: string;
  _type: "post";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  featuredImage?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  title: string;
  slug: Slug;
  tags: Array<{
    _ref: string;
    _type: "reference";
    _weak?: boolean;
    _key: string;
    [internalGroqTypeReferenceTo]?: "tag";
  }>;
  content?: DefaultRichText;
  seo?: Seo;
};

export type SiteSettings = {
  _id: string;
  _type: "siteSettings";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  logo?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  title: string;
  description?: SimpleRichText;
  headerNavigation?: Array<
    {
      _key: string;
    } & Headerlink
  >;
  googleTagManagerId?: string;
  seo?: Seo;
};

export type Page = {
  _id: string;
  _type: "page";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  title: string;
  slug: Slug;
  contentType: "text" | "builder";
  content?: DefaultRichText;
  pageBuilder?: PageBuilder;
  seo?: Seo;
};

export type Seo = {
  _type: "seo";
  image?: {
    asset?: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    };
    hotspot?: SanityImageHotspot;
    crop?: SanityImageCrop;
    _type: "image";
  };
  title?: string;
  description?: string;
  index: "index" | "noindex";
  follow: "follow" | "nofollow";
  canonical?: string;
};

export type GlobalBlock = {
  _id: string;
  _type: "globalBlock";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  title: string;
  blocks: Array<
    | ({
        _key: string;
      } & TextMedia)
    | ({
        _key: string;
      } & TextContent)
    | ({
        _key: string;
      } & FullWidthVideo)
    | ({
        _key: string;
      } & FullWidthImage)
    | ({
        _key: string;
      } & AccordionSection)
    | ({
        _key: string;
      } & CardSection)
    | ({
        _key: string;
      } & ProfileInfo)
  >;
};

export type PageBuilder = {
  _type: "pageBuilder";
  blocks?: Array<
    | ({
        _key: string;
      } & TextMedia)
    | ({
        _key: string;
      } & TextContent)
    | ({
        _key: string;
      } & FullWidthVideo)
    | ({
        _key: string;
      } & FullWidthImage)
    | ({
        _key: string;
      } & AccordionSection)
    | ({
        _key: string;
      } & CardSection)
    | ({
        _key: string;
      } & ProfileInfo)
    | {
        globalBlock?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "globalBlock";
        };
        _type: "globalContent";
        _key: string;
      }
  >;
};

export type SimpleRichText = {
  _type: "simpleRichText";
  text?: Array<{
    children?: Array<{
      marks?: Array<string>;
      text?: string;
      _type: "span";
      _key: string;
    }>;
    style?: "normal";
    listItem?: "bullet" | "number";
    markDefs?: Array<
      | ({
          _key: string;
        } & InternalLink)
      | ({
          _key: string;
        } & ExternalLink)
    >;
    level?: number;
    _type: "block";
    _key: string;
  }>;
};

export type DefaultRichText = {
  _type: "defaultRichText";
  text?: Array<
    | {
        children?: Array<{
          marks?: Array<string>;
          text?: string;
          _type: "span";
          _key: string;
        }>;
        style?: "normal" | "h2" | "h3" | "h4" | "blockquote";
        listItem?: "bullet" | "number";
        markDefs?: Array<
          | ({
              _key: string;
            } & InternalLink)
          | ({
              _key: string;
            } & ExternalLink)
        >;
        level?: number;
        _type: "block";
        _key: string;
      }
    | {
        asset?: {
          _ref: string;
          _type: "reference";
          _weak?: boolean;
          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
        };
        hotspot?: SanityImageHotspot;
        crop?: SanityImageCrop;
        alt: string;
        caption?: string;
        _type: "image";
        _key: string;
      }
    | ({
        _key: string;
      } & Video)
    | ({
        _key: string;
      } & Accordion)
  >;
};

export type Slug = {
  _type: "slug";
  current: string;
  source?: string;
};

export type SanityImageCrop = {
  _type: "sanity.imageCrop";
  top?: number;
  bottom?: number;
  left?: number;
  right?: number;
};

export type SanityImageHotspot = {
  _type: "sanity.imageHotspot";
  x?: number;
  y?: number;
  height?: number;
  width?: number;
};

export type SanityImageAsset = {
  _id: string;
  _type: "sanity.imageAsset";
  _createdAt: string;
  _updatedAt: string;
  _rev: string;
  originalFilename?: string;
  label?: string;
  title?: string;
  description?: string;
  altText?: string;
  sha1hash?: string;
  extension?: string;
  mimeType?: string;
  size?: number;
  assetId?: string;
  uploadId?: string;
  path?: string;
  url?: string;
  metadata?: SanityImageMetadata;
  source?: SanityAssetSourceData;
};

export type SanityAssetSourceData = {
  _type: "sanity.assetSourceData";
  name?: string;
  id?: string;
  url?: string;
};

export type SanityImageMetadata = {
  _type: "sanity.imageMetadata";
  location?: Geopoint;
  dimensions?: SanityImageDimensions;
  palette?: SanityImagePalette;
  lqip?: string;
  blurHash?: string;
  hasAlpha?: boolean;
  isOpaque?: boolean;
};

export type IconManager = {
  _type: "icon.manager";
  icon?: string;
  metadata?: IconManagerMetadata;
};

export type IconManagerMetadata = {
  _type: "icon.manager.metadata";
  downloadUrl?: string;
  url?: string;
  inlineSvg?: string;
  collectionId?: string;
  collectionName?: string;
  iconName?: string;
  palette?: boolean;
  license?: IconManagerLicense;
  author?: IconManagerAuthor;
  size?: IconManagerSize;
  hFlip?: boolean;
  vFlip?: boolean;
  rotate?: number;
  color?: IconManagerColor;
};

export type IconManagerLicense = {
  _type: "icon.manager.license";
  name?: string;
  url?: string;
};

export type IconManagerAuthor = {
  _type: "icon.manager.author";
  name?: string;
  url?: string;
};

export type IconManagerSize = {
  _type: "icon.manager.size";
  width?: number;
  height?: number;
};

export type IconManagerColor = {
  _type: "icon.manager.color";
  hex?: string;
  rgba?: IconManagerColorRgba;
};

export type IconManagerColorRgba = {
  _type: "icon.manager.color.rgba";
  r?: number;
  g?: number;
  b?: number;
  a?: number;
};

export type AllSanitySchemaTypes =
  | SanityImagePaletteSwatch
  | SanityImagePalette
  | SanityImageDimensions
  | SanityFileAsset
  | Geopoint
  | ProfileInfo
  | CardSection
  | AccordionSection
  | FullWidthImage
  | FullWidthVideo
  | TextContent
  | TextMedia
  | Headerlink
  | Link
  | Accordion
  | Video
  | ExternalLink
  | InternalLink
  | Tag
  | ArchivePage
  | FrontPage
  | Post
  | SiteSettings
  | Page
  | Seo
  | GlobalBlock
  | PageBuilder
  | SimpleRichText
  | DefaultRichText
  | Slug
  | SanityImageCrop
  | SanityImageHotspot
  | SanityImageAsset
  | SanityAssetSourceData
  | SanityImageMetadata
  | IconManager
  | IconManagerMetadata
  | IconManagerLicense
  | IconManagerAuthor
  | IconManagerSize
  | IconManagerColor
  | IconManagerColorRgba;
export declare const internalGroqTypeReferenceTo: unique symbol;
// Source: ./src/data/general.ts
// Variable: layoutQuery
// Query: *[_type == "siteSettings"][0]{      googleTagManagerId,      "header": {          title,          logo {            asset,"metadata": asset->metadata.dimensions,hotspot,crop,alt,caption          },          headerNavigation[]{            _key,            icon {  metadata {  inlineSvg,  size,  color}},label,"href": select(  linkType == "internal" => coalesce(    select(      internalLink->_type == "archivePage" => internalLink->_id,       internalLink->_type != "archivePage" => internalLink->slug.current,      "#"    ),     "#"  ),  linkType == "external" => coalesce(    externalLink.url, "#"  ))          }        }      }
export type LayoutQueryResult = {
  googleTagManagerId: string | null;
  header: {
    title: string;
    logo: {
      asset: {
        _ref: string;
        _type: "reference";
        _weak?: boolean;
        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
      } | null;
      metadata: SanityImageDimensions | null;
      hotspot: SanityImageHotspot | null;
      crop: SanityImageCrop | null;
      alt: null;
      caption: null;
    } | null;
    headerNavigation: Array<{
      _key: string;
      icon: {
        metadata: {
          inlineSvg: string | null;
          size: IconManagerSize | null;
          color: IconManagerColor | null;
        } | null;
      } | null;
      label: string;
      href: string | "#";
    }> | null;
  };
} | null;
// Variable: contentMetaQuery
// Query: *[_type == $type && slug.current == $slug][0]{      "title": coalesce(seo.title, title),"description": seo.description,"featuredImage": coalesce(seo.featuredImage, mainImage),"index": seo.index,"follow": seo.follow,"canonical": seo.canonical,    }
export type ContentMetaQueryResult =
  | {
      title: string;
      description: null;
      featuredImage: null;
      index: null;
      follow: null;
      canonical: null;
    }
  | {
      title: string | null;
      description: null;
      featuredImage: null;
      index: null;
      follow: null;
      canonical: null;
    }
  | {
      title: string;
      description: string | null;
      featuredImage: null;
      index: "index" | "noindex" | null;
      follow: "follow" | "nofollow" | null;
      canonical: string | null;
    }
  | {
      title: string | null;
      description: string | null;
      featuredImage: null;
      index: "index" | "noindex" | null;
      follow: "follow" | "nofollow" | null;
      canonical: string | null;
    }
  | null;
// Variable: homePageMeta
// Query: *[_type == "frontPage"][0]{      "title": coalesce(seo.title, title),"description": seo.description,"featuredImage": coalesce(seo.featuredImage, mainImage),"index": seo.index,"follow": seo.follow,"canonical": seo.canonical,    }
export type HomePageMetaResult = {
  title: string | null;
  description: string | null;
  featuredImage: null;
  index: "index" | "noindex" | null;
  follow: "follow" | "nofollow" | null;
  canonical: string | null;
} | null;
// Variable: layoutMeta
// Query: *[_type == "siteSettings"][0]{      "title": coalesce(seo.title, title),"description": seo.description,"featuredImage": coalesce(seo.featuredImage, mainImage),"index": seo.index,"follow": seo.follow,"canonical": seo.canonical,    }
export type LayoutMetaResult = {
  title: string;
  description: string | null;
  featuredImage: null;
  index: "index" | "noindex" | null;
  follow: "follow" | "nofollow" | null;
  canonical: string | null;
} | null;

// Source: ./src/data/page.ts
// Variable: pageQuery
// Query: *[_type == "page" && slug.current == $slug][0]{      _id,      _type,      title,      "content": select(        contentType == "text" => content{          _type,          "image": ^.image {            asset,"metadata": asset->metadata.dimensions,hotspot,crop,alt,caption          },          text[]{            ...,markDefs[]{  ...,  _type == "internalLink" => {    "slug": @.reference->slug.current  },  _type == "externalLink" => {    url  }},_type == "image" => {  asset,"metadata": asset->metadata.dimensions,hotspot,crop,alt,caption},_type == "video" => {  title,thumbnail {  asset,"metadata": asset->metadata.dimensions,hotspot,crop,alt,caption},videoUrl},_type == "accordion" => {  title,items[]{  _key,  title,  content{    text[]{      ...,markDefs[]{  ...,  _type == "internalLink" => {    "slug": @.reference->slug.current  },  _type == "externalLink" => {    url  }},    }  }}}          },          "tableOfContents": text[style == "h2"]{            _key,            "text": coalesce(children[0].text, "")          },        },        contentType == "builder" => pageBuilder {          _type,          blocks[]{            _key,_type,_type == "textMedia" => {  title,  mediaPlacement,  mediaSize,  layout,  variant,  "media": select(    mediaType == "image" => image {      "_type": "image",      asset,"metadata": asset->metadata.dimensions,hotspot,crop,alt,caption    },    mediaType == "video" => video {      "_type": "video",      title,thumbnail {  asset,"metadata": asset->metadata.dimensions,hotspot,crop,alt,caption},videoUrl    }  ),  content{    text[]{      ...,markDefs[]{  ...,  _type == "internalLink" => {    "slug": @.reference->slug.current  },  _type == "externalLink" => {    url  }},    }  },  links[]{    _key,    label,"href": select(  linkType == "internal" => coalesce(    select(      internalLink->_type == "archivePage" => internalLink->_id,       internalLink->_type != "archivePage" => internalLink->slug.current,      "#"    ),     "#"  ),  linkType == "external" => coalesce(    externalLink.url, "#"  ))  }},_type == "profileInfo" => {  title,  subtitle,  mediaPlacement,  mediaSize,  layout,  variant,  "media": select(    mediaType == "image" => image {      "_type": "image",      asset,"metadata": asset->metadata.dimensions,hotspot,crop,alt,caption    },    mediaType == "video" => video {      "_type": "video",      title,thumbnail {  asset,"metadata": asset->metadata.dimensions,hotspot,crop,alt,caption},videoUrl    }  ),  content{    text[]{      ...,markDefs[]{  ...,  _type == "internalLink" => {    "slug": @.reference->slug.current  },  _type == "externalLink" => {    url  }},    }  },  links[]{    _key,    label,"href": select(  linkType == "internal" => coalesce(    select(      internalLink->_type == "archivePage" => internalLink->_id,       internalLink->_type != "archivePage" => internalLink->slug.current,      "#"    ),     "#"  ),  linkType == "external" => coalesce(    externalLink.url, "#"  ))  }},_type == "textContent" => {  title,  alignment,  variant,  layout,  content{    text[]{      ...,markDefs[]{  ...,  _type == "internalLink" => {    "slug": @.reference->slug.current  },  _type == "externalLink" => {    url  }},    }  },  links[]{    _key,    label,"href": select(  linkType == "internal" => coalesce(    select(      internalLink->_type == "archivePage" => internalLink->_id,       internalLink->_type != "archivePage" => internalLink->slug.current,      "#"    ),     "#"  ),  linkType == "external" => coalesce(    externalLink.url, "#"  ))  }},_type == "accordionSection" => {  title,  layout,  content {    text[]{      ...,markDefs[]{  ...,  _type == "internalLink" => {    "slug": @.reference->slug.current  },  _type == "externalLink" => {    url  }},    }  },  links[]{    _key,    label,"href": select(  linkType == "internal" => coalesce(    select(      internalLink->_type == "archivePage" => internalLink->_id,       internalLink->_type != "archivePage" => internalLink->slug.current,      "#"    ),     "#"  ),  linkType == "external" => coalesce(    externalLink.url, "#"  ))  },  items[]{    _key,    title,    content {      text[]{        ...,markDefs[]{  ...,  _type == "internalLink" => {    "slug": @.reference->slug.current  },  _type == "externalLink" => {    url  }},      }    }  }},_type == "cardSection" => {  title,  variant,  content {    text[]{      ...,markDefs[]{  ...,  _type == "internalLink" => {    "slug": @.reference->slug.current  },  _type == "externalLink" => {    url  }},    }  },  links[]{    _key,    label,"href": select(  linkType == "internal" => coalesce(    select(      internalLink->_type == "archivePage" => internalLink->_id,       internalLink->_type != "archivePage" => internalLink->slug.current,      "#"    ),     "#"  ),  linkType == "external" => coalesce(    externalLink.url, "#"  ))  },  cards[]{    _key,    icon {      metadata {  inlineSvg,  size,  color}    },    title,    content {      text[]{        ...,markDefs[]{  ...,  _type == "internalLink" => {    "slug": @.reference->slug.current  },  _type == "externalLink" => {    url  }},      }    }  }},_type == "fullWidthImage" => {  title,  content{    text[]{      ...,markDefs[]{  ...,  _type == "internalLink" => {    "slug": @.reference->slug.current  },  _type == "externalLink" => {    url  }},    }  },  links[]{    _key,    label,"href": select(  linkType == "internal" => coalesce(    select(      internalLink->_type == "archivePage" => internalLink->_id,       internalLink->_type != "archivePage" => internalLink->slug.current,      "#"    ),     "#"  ),  linkType == "external" => coalesce(    externalLink.url, "#"  ))  },  image {    asset,"metadata": asset->metadata.dimensions,hotspot,crop,alt,caption  }},_type == "fullWidthVideo" => {  title,  content{    text[]{      ...,markDefs[]{  ...,  _type == "internalLink" => {    "slug": @.reference->slug.current  },  _type == "externalLink" => {    url  }},    }  },  links[]{    _key,    label,"href": select(  linkType == "internal" => coalesce(    select(      internalLink->_type == "archivePage" => internalLink->_id,       internalLink->_type != "archivePage" => internalLink->slug.current,      "#"    ),     "#"  ),  linkType == "external" => coalesce(    externalLink.url, "#"  ))  },  video {    title,thumbnail {  asset,"metadata": asset->metadata.dimensions,hotspot,crop,alt,caption},videoUrl  }},_type == "globalContent" => {  "globalBlock": @.globalBlock->blocks[0]{    _key,    _type,    _type == "textMedia" => {  title,  mediaPlacement,  mediaSize,  layout,  variant,  "media": select(    mediaType == "image" => image {      "_type": "image",      asset,"metadata": asset->metadata.dimensions,hotspot,crop,alt,caption    },    mediaType == "video" => video {      "_type": "video",      title,thumbnail {  asset,"metadata": asset->metadata.dimensions,hotspot,crop,alt,caption},videoUrl    }  ),  content{    text[]{      ...,markDefs[]{  ...,  _type == "internalLink" => {    "slug": @.reference->slug.current  },  _type == "externalLink" => {    url  }},    }  },  links[]{    _key,    label,"href": select(  linkType == "internal" => coalesce(    select(      internalLink->_type == "archivePage" => internalLink->_id,       internalLink->_type != "archivePage" => internalLink->slug.current,      "#"    ),     "#"  ),  linkType == "external" => coalesce(    externalLink.url, "#"  ))  }},_type == "profileInfo" => {  title,  subtitle,  mediaPlacement,  mediaSize,  layout,  variant,  "media": select(    mediaType == "image" => image {      "_type": "image",      asset,"metadata": asset->metadata.dimensions,hotspot,crop,alt,caption    },    mediaType == "video" => video {      "_type": "video",      title,thumbnail {  asset,"metadata": asset->metadata.dimensions,hotspot,crop,alt,caption},videoUrl    }  ),  content{    text[]{      ...,markDefs[]{  ...,  _type == "internalLink" => {    "slug": @.reference->slug.current  },  _type == "externalLink" => {    url  }},    }  },  links[]{    _key,    label,"href": select(  linkType == "internal" => coalesce(    select(      internalLink->_type == "archivePage" => internalLink->_id,       internalLink->_type != "archivePage" => internalLink->slug.current,      "#"    ),     "#"  ),  linkType == "external" => coalesce(    externalLink.url, "#"  ))  }},_type == "textContent" => {  title,  alignment,  variant,  layout,  content{    text[]{      ...,markDefs[]{  ...,  _type == "internalLink" => {    "slug": @.reference->slug.current  },  _type == "externalLink" => {    url  }},    }  },  links[]{    _key,    label,"href": select(  linkType == "internal" => coalesce(    select(      internalLink->_type == "archivePage" => internalLink->_id,       internalLink->_type != "archivePage" => internalLink->slug.current,      "#"    ),     "#"  ),  linkType == "external" => coalesce(    externalLink.url, "#"  ))  }},_type == "accordionSection" => {  title,  layout,  content {    text[]{      ...,markDefs[]{  ...,  _type == "internalLink" => {    "slug": @.reference->slug.current  },  _type == "externalLink" => {    url  }},    }  },  links[]{    _key,    label,"href": select(  linkType == "internal" => coalesce(    select(      internalLink->_type == "archivePage" => internalLink->_id,       internalLink->_type != "archivePage" => internalLink->slug.current,      "#"    ),     "#"  ),  linkType == "external" => coalesce(    externalLink.url, "#"  ))  },  items[]{    _key,    title,    content {      text[]{        ...,markDefs[]{  ...,  _type == "internalLink" => {    "slug": @.reference->slug.current  },  _type == "externalLink" => {    url  }},      }    }  }},_type == "cardSection" => {  title,  variant,  content {    text[]{      ...,markDefs[]{  ...,  _type == "internalLink" => {    "slug": @.reference->slug.current  },  _type == "externalLink" => {    url  }},    }  },  links[]{    _key,    label,"href": select(  linkType == "internal" => coalesce(    select(      internalLink->_type == "archivePage" => internalLink->_id,       internalLink->_type != "archivePage" => internalLink->slug.current,      "#"    ),     "#"  ),  linkType == "external" => coalesce(    externalLink.url, "#"  ))  },  cards[]{    _key,    icon {      metadata {  inlineSvg,  size,  color}    },    title,    content {      text[]{        ...,markDefs[]{  ...,  _type == "internalLink" => {    "slug": @.reference->slug.current  },  _type == "externalLink" => {    url  }},      }    }  }},_type == "fullWidthImage" => {  title,  content{    text[]{      ...,markDefs[]{  ...,  _type == "internalLink" => {    "slug": @.reference->slug.current  },  _type == "externalLink" => {    url  }},    }  },  links[]{    _key,    label,"href": select(  linkType == "internal" => coalesce(    select(      internalLink->_type == "archivePage" => internalLink->_id,       internalLink->_type != "archivePage" => internalLink->slug.current,      "#"    ),     "#"  ),  linkType == "external" => coalesce(    externalLink.url, "#"  ))  },  image {    asset,"metadata": asset->metadata.dimensions,hotspot,crop,alt,caption  }},_type == "fullWidthVideo" => {  title,  content{    text[]{      ...,markDefs[]{  ...,  _type == "internalLink" => {    "slug": @.reference->slug.current  },  _type == "externalLink" => {    url  }},    }  },  links[]{    _key,    label,"href": select(  linkType == "internal" => coalesce(    select(      internalLink->_type == "archivePage" => internalLink->_id,       internalLink->_type != "archivePage" => internalLink->slug.current,      "#"    ),     "#"  ),  linkType == "external" => coalesce(    externalLink.url, "#"  ))  },  video {    title,thumbnail {  asset,"metadata": asset->metadata.dimensions,hotspot,crop,alt,caption},videoUrl  }}  }}          }        }      ),    }
export type PageQueryResult = {
  _id: string;
  _type: "page";
  title: string;
  content:
    | {
        _type: "defaultRichText";
        image: {
          asset: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          } | null;
          metadata: SanityImageDimensions | null;
          hotspot: SanityImageHotspot | null;
          crop: SanityImageCrop | null;
          alt: null;
          caption: null;
        } | null;
        text: Array<
          | {
              _key: string;
              _type: "accordion";
              title: string | null;
              items: Array<{
                _key: string;
                title: string;
                content: {
                  text: Array<{
                    children?: Array<{
                      marks?: Array<string>;
                      text?: string;
                      _type: "span";
                      _key: string;
                    }>;
                    style?: "normal";
                    listItem?: "bullet" | "number";
                    markDefs: Array<
                      | {
                          _key: string;
                          _type: "externalLink";
                          url: string;
                        }
                      | {
                          _key: string;
                          _type: "internalLink";
                          reference?:
                            | {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "archivePage";
                              }
                            | {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "frontPage";
                              }
                            | {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "page";
                              }
                            | {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "post";
                              };
                          slug: string | null;
                        }
                    > | null;
                    level?: number;
                    _type: "block";
                    _key: string;
                  }> | null;
                } | null;
              }> | null;
              markDefs: null;
            }
          | {
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "blockquote" | "h2" | "h3" | "h4" | "normal";
              listItem?: "bullet" | "number";
              markDefs: Array<
                | {
                    _key: string;
                    _type: "externalLink";
                    url: string;
                  }
                | {
                    _key: string;
                    _type: "internalLink";
                    reference?:
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "archivePage";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "frontPage";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "page";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "post";
                        };
                    slug: string | null;
                  }
              > | null;
              level?: number;
              _type: "block";
              _key: string;
            }
          | {
              asset: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              } | null;
              hotspot: SanityImageHotspot | null;
              crop: SanityImageCrop | null;
              alt: string;
              caption: string | null;
              _type: "image";
              _key: string;
              markDefs: null;
              metadata: SanityImageDimensions | null;
            }
          | {
              _key: string;
              _type: "video";
              title: string | null;
              thumbnail: {
                asset: {
                  _ref: string;
                  _type: "reference";
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                } | null;
                metadata: SanityImageDimensions | null;
                hotspot: SanityImageHotspot | null;
                crop: SanityImageCrop | null;
                alt: null;
                caption: null;
              } | null;
              videoUrl: string | null;
              markDefs: null;
            }
        > | null;
        tableOfContents: Array<{
          _key: string;
          text: string | "";
        }> | null;
      }
    | null
    | {
        _type: "pageBuilder";
        blocks: Array<
          | {
              _key: string;
              _type: "accordionSection";
              title: string | null;
              layout: "centered " | "default";
              content: {
                text: Array<{
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: "span";
                    _key: string;
                  }>;
                  style?: "normal";
                  listItem?: "bullet" | "number";
                  markDefs: Array<
                    | {
                        _key: string;
                        _type: "externalLink";
                        url: string;
                      }
                    | {
                        _key: string;
                        _type: "internalLink";
                        reference?:
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "archivePage";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "frontPage";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "page";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "post";
                            };
                        slug: string | null;
                      }
                  > | null;
                  level?: number;
                  _type: "block";
                  _key: string;
                }> | null;
              } | null;
              links: Array<{
                _key: string;
                label: string;
                href: string | "#";
              }> | null;
              items: Array<{
                _key: string;
                title: string;
                content: {
                  text: Array<{
                    children?: Array<{
                      marks?: Array<string>;
                      text?: string;
                      _type: "span";
                      _key: string;
                    }>;
                    style?: "normal";
                    listItem?: "bullet" | "number";
                    markDefs: Array<
                      | {
                          _key: string;
                          _type: "externalLink";
                          url: string;
                        }
                      | {
                          _key: string;
                          _type: "internalLink";
                          reference?:
                            | {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "archivePage";
                              }
                            | {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "frontPage";
                              }
                            | {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "page";
                              }
                            | {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "post";
                              };
                          slug: string | null;
                        }
                    > | null;
                    level?: number;
                    _type: "block";
                    _key: string;
                  }> | null;
                };
              }> | null;
            }
          | {
              _key: string;
              _type: "cardSection";
              title: string | null;
              variant: "alternative" | "default";
              content: {
                text: Array<{
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: "span";
                    _key: string;
                  }>;
                  style?: "normal";
                  listItem?: "bullet" | "number";
                  markDefs: Array<
                    | {
                        _key: string;
                        _type: "externalLink";
                        url: string;
                      }
                    | {
                        _key: string;
                        _type: "internalLink";
                        reference?:
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "archivePage";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "frontPage";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "page";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "post";
                            };
                        slug: string | null;
                      }
                  > | null;
                  level?: number;
                  _type: "block";
                  _key: string;
                }> | null;
              } | null;
              links: Array<{
                _key: string;
                label: string;
                href: string | "#";
              }> | null;
              cards: Array<{
                _key: string;
                icon: {
                  metadata: {
                    inlineSvg: string | null;
                    size: IconManagerSize | null;
                    color: IconManagerColor | null;
                  } | null;
                } | null;
                title: string | null;
                content: {
                  text: Array<{
                    children?: Array<{
                      marks?: Array<string>;
                      text?: string;
                      _type: "span";
                      _key: string;
                    }>;
                    style?: "normal";
                    listItem?: "bullet" | "number";
                    markDefs: Array<
                      | {
                          _key: string;
                          _type: "externalLink";
                          url: string;
                        }
                      | {
                          _key: string;
                          _type: "internalLink";
                          reference?:
                            | {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "archivePage";
                              }
                            | {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "frontPage";
                              }
                            | {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "page";
                              }
                            | {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "post";
                              };
                          slug: string | null;
                        }
                    > | null;
                    level?: number;
                    _type: "block";
                    _key: string;
                  }> | null;
                } | null;
              }> | null;
            }
          | {
              _key: string;
              _type: "fullWidthImage";
              title: string | null;
              content: {
                text: Array<{
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: "span";
                    _key: string;
                  }>;
                  style?: "normal";
                  listItem?: "bullet" | "number";
                  markDefs: Array<
                    | {
                        _key: string;
                        _type: "externalLink";
                        url: string;
                      }
                    | {
                        _key: string;
                        _type: "internalLink";
                        reference?:
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "archivePage";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "frontPage";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "page";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "post";
                            };
                        slug: string | null;
                      }
                  > | null;
                  level?: number;
                  _type: "block";
                  _key: string;
                }> | null;
              } | null;
              links: Array<{
                _key: string;
                label: string;
                href: string | "#";
              }> | null;
              image: {
                asset: {
                  _ref: string;
                  _type: "reference";
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                } | null;
                metadata: SanityImageDimensions | null;
                hotspot: SanityImageHotspot | null;
                crop: SanityImageCrop | null;
                alt: null;
                caption: null;
              };
            }
          | {
              _key: string;
              _type: "fullWidthVideo";
              title: string | null;
              content: {
                text: Array<{
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: "span";
                    _key: string;
                  }>;
                  style?: "normal";
                  listItem?: "bullet" | "number";
                  markDefs: Array<
                    | {
                        _key: string;
                        _type: "externalLink";
                        url: string;
                      }
                    | {
                        _key: string;
                        _type: "internalLink";
                        reference?:
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "archivePage";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "frontPage";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "page";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "post";
                            };
                        slug: string | null;
                      }
                  > | null;
                  level?: number;
                  _type: "block";
                  _key: string;
                }> | null;
              } | null;
              links: Array<{
                _key: string;
                label: string;
                href: string | "#";
              }> | null;
              video: {
                title: string | null;
                thumbnail: {
                  asset: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  } | null;
                  metadata: SanityImageDimensions | null;
                  hotspot: SanityImageHotspot | null;
                  crop: SanityImageCrop | null;
                  alt: null;
                  caption: null;
                } | null;
                videoUrl: string | null;
              } | null;
            }
          | {
              _key: string;
              _type: "globalContent";
              globalBlock:
                | {
                    _key: string;
                    _type: "accordionSection";
                    title: string | null;
                    layout: "centered " | "default";
                    content: {
                      text: Array<{
                        children?: Array<{
                          marks?: Array<string>;
                          text?: string;
                          _type: "span";
                          _key: string;
                        }>;
                        style?: "normal";
                        listItem?: "bullet" | "number";
                        markDefs: Array<
                          | {
                              _key: string;
                              _type: "externalLink";
                              url: string;
                            }
                          | {
                              _key: string;
                              _type: "internalLink";
                              reference?:
                                | {
                                    _ref: string;
                                    _type: "reference";
                                    _weak?: boolean;
                                    [internalGroqTypeReferenceTo]?: "archivePage";
                                  }
                                | {
                                    _ref: string;
                                    _type: "reference";
                                    _weak?: boolean;
                                    [internalGroqTypeReferenceTo]?: "frontPage";
                                  }
                                | {
                                    _ref: string;
                                    _type: "reference";
                                    _weak?: boolean;
                                    [internalGroqTypeReferenceTo]?: "page";
                                  }
                                | {
                                    _ref: string;
                                    _type: "reference";
                                    _weak?: boolean;
                                    [internalGroqTypeReferenceTo]?: "post";
                                  };
                              slug: string | null;
                            }
                        > | null;
                        level?: number;
                        _type: "block";
                        _key: string;
                      }> | null;
                    } | null;
                    links: Array<{
                      _key: string;
                      label: string;
                      href: string | "#";
                    }> | null;
                    items: Array<{
                      _key: string;
                      title: string;
                      content: {
                        text: Array<{
                          children?: Array<{
                            marks?: Array<string>;
                            text?: string;
                            _type: "span";
                            _key: string;
                          }>;
                          style?: "normal";
                          listItem?: "bullet" | "number";
                          markDefs: Array<
                            | {
                                _key: string;
                                _type: "externalLink";
                                url: string;
                              }
                            | {
                                _key: string;
                                _type: "internalLink";
                                reference?:
                                  | {
                                      _ref: string;
                                      _type: "reference";
                                      _weak?: boolean;
                                      [internalGroqTypeReferenceTo]?: "archivePage";
                                    }
                                  | {
                                      _ref: string;
                                      _type: "reference";
                                      _weak?: boolean;
                                      [internalGroqTypeReferenceTo]?: "frontPage";
                                    }
                                  | {
                                      _ref: string;
                                      _type: "reference";
                                      _weak?: boolean;
                                      [internalGroqTypeReferenceTo]?: "page";
                                    }
                                  | {
                                      _ref: string;
                                      _type: "reference";
                                      _weak?: boolean;
                                      [internalGroqTypeReferenceTo]?: "post";
                                    };
                                slug: string | null;
                              }
                          > | null;
                          level?: number;
                          _type: "block";
                          _key: string;
                        }> | null;
                      };
                    }> | null;
                  }
                | {
                    _key: string;
                    _type: "cardSection";
                    title: string | null;
                    variant: "alternative" | "default";
                    content: {
                      text: Array<{
                        children?: Array<{
                          marks?: Array<string>;
                          text?: string;
                          _type: "span";
                          _key: string;
                        }>;
                        style?: "normal";
                        listItem?: "bullet" | "number";
                        markDefs: Array<
                          | {
                              _key: string;
                              _type: "externalLink";
                              url: string;
                            }
                          | {
                              _key: string;
                              _type: "internalLink";
                              reference?:
                                | {
                                    _ref: string;
                                    _type: "reference";
                                    _weak?: boolean;
                                    [internalGroqTypeReferenceTo]?: "archivePage";
                                  }
                                | {
                                    _ref: string;
                                    _type: "reference";
                                    _weak?: boolean;
                                    [internalGroqTypeReferenceTo]?: "frontPage";
                                  }
                                | {
                                    _ref: string;
                                    _type: "reference";
                                    _weak?: boolean;
                                    [internalGroqTypeReferenceTo]?: "page";
                                  }
                                | {
                                    _ref: string;
                                    _type: "reference";
                                    _weak?: boolean;
                                    [internalGroqTypeReferenceTo]?: "post";
                                  };
                              slug: string | null;
                            }
                        > | null;
                        level?: number;
                        _type: "block";
                        _key: string;
                      }> | null;
                    } | null;
                    links: Array<{
                      _key: string;
                      label: string;
                      href: string | "#";
                    }> | null;
                    cards: Array<{
                      _key: string;
                      icon: {
                        metadata: {
                          inlineSvg: string | null;
                          size: IconManagerSize | null;
                          color: IconManagerColor | null;
                        } | null;
                      } | null;
                      title: string | null;
                      content: {
                        text: Array<{
                          children?: Array<{
                            marks?: Array<string>;
                            text?: string;
                            _type: "span";
                            _key: string;
                          }>;
                          style?: "normal";
                          listItem?: "bullet" | "number";
                          markDefs: Array<
                            | {
                                _key: string;
                                _type: "externalLink";
                                url: string;
                              }
                            | {
                                _key: string;
                                _type: "internalLink";
                                reference?:
                                  | {
                                      _ref: string;
                                      _type: "reference";
                                      _weak?: boolean;
                                      [internalGroqTypeReferenceTo]?: "archivePage";
                                    }
                                  | {
                                      _ref: string;
                                      _type: "reference";
                                      _weak?: boolean;
                                      [internalGroqTypeReferenceTo]?: "frontPage";
                                    }
                                  | {
                                      _ref: string;
                                      _type: "reference";
                                      _weak?: boolean;
                                      [internalGroqTypeReferenceTo]?: "page";
                                    }
                                  | {
                                      _ref: string;
                                      _type: "reference";
                                      _weak?: boolean;
                                      [internalGroqTypeReferenceTo]?: "post";
                                    };
                                slug: string | null;
                              }
                          > | null;
                          level?: number;
                          _type: "block";
                          _key: string;
                        }> | null;
                      } | null;
                    }> | null;
                  }
                | {
                    _key: string;
                    _type: "fullWidthImage";
                    title: string | null;
                    content: {
                      text: Array<{
                        children?: Array<{
                          marks?: Array<string>;
                          text?: string;
                          _type: "span";
                          _key: string;
                        }>;
                        style?: "normal";
                        listItem?: "bullet" | "number";
                        markDefs: Array<
                          | {
                              _key: string;
                              _type: "externalLink";
                              url: string;
                            }
                          | {
                              _key: string;
                              _type: "internalLink";
                              reference?:
                                | {
                                    _ref: string;
                                    _type: "reference";
                                    _weak?: boolean;
                                    [internalGroqTypeReferenceTo]?: "archivePage";
                                  }
                                | {
                                    _ref: string;
                                    _type: "reference";
                                    _weak?: boolean;
                                    [internalGroqTypeReferenceTo]?: "frontPage";
                                  }
                                | {
                                    _ref: string;
                                    _type: "reference";
                                    _weak?: boolean;
                                    [internalGroqTypeReferenceTo]?: "page";
                                  }
                                | {
                                    _ref: string;
                                    _type: "reference";
                                    _weak?: boolean;
                                    [internalGroqTypeReferenceTo]?: "post";
                                  };
                              slug: string | null;
                            }
                        > | null;
                        level?: number;
                        _type: "block";
                        _key: string;
                      }> | null;
                    } | null;
                    links: Array<{
                      _key: string;
                      label: string;
                      href: string | "#";
                    }> | null;
                    image: {
                      asset: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      } | null;
                      metadata: SanityImageDimensions | null;
                      hotspot: SanityImageHotspot | null;
                      crop: SanityImageCrop | null;
                      alt: null;
                      caption: null;
                    };
                  }
                | {
                    _key: string;
                    _type: "fullWidthVideo";
                    title: string | null;
                    content: {
                      text: Array<{
                        children?: Array<{
                          marks?: Array<string>;
                          text?: string;
                          _type: "span";
                          _key: string;
                        }>;
                        style?: "normal";
                        listItem?: "bullet" | "number";
                        markDefs: Array<
                          | {
                              _key: string;
                              _type: "externalLink";
                              url: string;
                            }
                          | {
                              _key: string;
                              _type: "internalLink";
                              reference?:
                                | {
                                    _ref: string;
                                    _type: "reference";
                                    _weak?: boolean;
                                    [internalGroqTypeReferenceTo]?: "archivePage";
                                  }
                                | {
                                    _ref: string;
                                    _type: "reference";
                                    _weak?: boolean;
                                    [internalGroqTypeReferenceTo]?: "frontPage";
                                  }
                                | {
                                    _ref: string;
                                    _type: "reference";
                                    _weak?: boolean;
                                    [internalGroqTypeReferenceTo]?: "page";
                                  }
                                | {
                                    _ref: string;
                                    _type: "reference";
                                    _weak?: boolean;
                                    [internalGroqTypeReferenceTo]?: "post";
                                  };
                              slug: string | null;
                            }
                        > | null;
                        level?: number;
                        _type: "block";
                        _key: string;
                      }> | null;
                    } | null;
                    links: Array<{
                      _key: string;
                      label: string;
                      href: string | "#";
                    }> | null;
                    video: {
                      title: string | null;
                      thumbnail: {
                        asset: {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                        } | null;
                        metadata: SanityImageDimensions | null;
                        hotspot: SanityImageHotspot | null;
                        crop: SanityImageCrop | null;
                        alt: null;
                        caption: null;
                      } | null;
                      videoUrl: string | null;
                    } | null;
                  }
                | {
                    _key: string;
                    _type: "profileInfo";
                    title: string | null;
                    subtitle: string | null;
                    mediaPlacement: "left" | "right";
                    mediaSize: "default" | "threefourth";
                    layout: "default" | "fullscreen";
                    variant: "alternative" | "default";
                    media:
                      | {
                          _type: "image";
                          asset: {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                          } | null;
                          metadata: SanityImageDimensions | null;
                          hotspot: SanityImageHotspot | null;
                          crop: SanityImageCrop | null;
                          alt: null;
                          caption: null;
                        }
                      | null
                      | {
                          _type: "video";
                          title: string | null;
                          thumbnail: {
                            asset: {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                            } | null;
                            metadata: SanityImageDimensions | null;
                            hotspot: SanityImageHotspot | null;
                            crop: SanityImageCrop | null;
                            alt: null;
                            caption: null;
                          } | null;
                          videoUrl: string | null;
                        };
                    content: {
                      text: Array<{
                        children?: Array<{
                          marks?: Array<string>;
                          text?: string;
                          _type: "span";
                          _key: string;
                        }>;
                        style?: "normal";
                        listItem?: "bullet" | "number";
                        markDefs: Array<
                          | {
                              _key: string;
                              _type: "externalLink";
                              url: string;
                            }
                          | {
                              _key: string;
                              _type: "internalLink";
                              reference?:
                                | {
                                    _ref: string;
                                    _type: "reference";
                                    _weak?: boolean;
                                    [internalGroqTypeReferenceTo]?: "archivePage";
                                  }
                                | {
                                    _ref: string;
                                    _type: "reference";
                                    _weak?: boolean;
                                    [internalGroqTypeReferenceTo]?: "frontPage";
                                  }
                                | {
                                    _ref: string;
                                    _type: "reference";
                                    _weak?: boolean;
                                    [internalGroqTypeReferenceTo]?: "page";
                                  }
                                | {
                                    _ref: string;
                                    _type: "reference";
                                    _weak?: boolean;
                                    [internalGroqTypeReferenceTo]?: "post";
                                  };
                              slug: string | null;
                            }
                        > | null;
                        level?: number;
                        _type: "block";
                        _key: string;
                      }> | null;
                    } | null;
                    links: Array<{
                      _key: string;
                      label: string;
                      href: string | "#";
                    }> | null;
                  }
                | {
                    _key: string;
                    _type: "textContent";
                    title: string | null;
                    alignment: "center" | "left" | "right";
                    variant: "alternative" | "default";
                    layout: "columns" | "default" | null;
                    content: {
                      text: Array<{
                        children?: Array<{
                          marks?: Array<string>;
                          text?: string;
                          _type: "span";
                          _key: string;
                        }>;
                        style?: "normal";
                        listItem?: "bullet" | "number";
                        markDefs: Array<
                          | {
                              _key: string;
                              _type: "externalLink";
                              url: string;
                            }
                          | {
                              _key: string;
                              _type: "internalLink";
                              reference?:
                                | {
                                    _ref: string;
                                    _type: "reference";
                                    _weak?: boolean;
                                    [internalGroqTypeReferenceTo]?: "archivePage";
                                  }
                                | {
                                    _ref: string;
                                    _type: "reference";
                                    _weak?: boolean;
                                    [internalGroqTypeReferenceTo]?: "frontPage";
                                  }
                                | {
                                    _ref: string;
                                    _type: "reference";
                                    _weak?: boolean;
                                    [internalGroqTypeReferenceTo]?: "page";
                                  }
                                | {
                                    _ref: string;
                                    _type: "reference";
                                    _weak?: boolean;
                                    [internalGroqTypeReferenceTo]?: "post";
                                  };
                              slug: string | null;
                            }
                        > | null;
                        level?: number;
                        _type: "block";
                        _key: string;
                      }> | null;
                    } | null;
                    links: Array<{
                      _key: string;
                      label: string;
                      href: string | "#";
                    }> | null;
                  }
                | {
                    _key: string;
                    _type: "textMedia";
                    title: string | null;
                    mediaPlacement: "left" | "right";
                    mediaSize: "default" | "threefourth";
                    layout: "default" | "fullscreen";
                    variant: "alternative" | "default";
                    media:
                      | {
                          _type: "image";
                          asset: {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                          } | null;
                          metadata: SanityImageDimensions | null;
                          hotspot: SanityImageHotspot | null;
                          crop: SanityImageCrop | null;
                          alt: null;
                          caption: null;
                        }
                      | null
                      | {
                          _type: "video";
                          title: string | null;
                          thumbnail: {
                            asset: {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                            } | null;
                            metadata: SanityImageDimensions | null;
                            hotspot: SanityImageHotspot | null;
                            crop: SanityImageCrop | null;
                            alt: null;
                            caption: null;
                          } | null;
                          videoUrl: string | null;
                        };
                    content: {
                      text: Array<{
                        children?: Array<{
                          marks?: Array<string>;
                          text?: string;
                          _type: "span";
                          _key: string;
                        }>;
                        style?: "normal";
                        listItem?: "bullet" | "number";
                        markDefs: Array<
                          | {
                              _key: string;
                              _type: "externalLink";
                              url: string;
                            }
                          | {
                              _key: string;
                              _type: "internalLink";
                              reference?:
                                | {
                                    _ref: string;
                                    _type: "reference";
                                    _weak?: boolean;
                                    [internalGroqTypeReferenceTo]?: "archivePage";
                                  }
                                | {
                                    _ref: string;
                                    _type: "reference";
                                    _weak?: boolean;
                                    [internalGroqTypeReferenceTo]?: "frontPage";
                                  }
                                | {
                                    _ref: string;
                                    _type: "reference";
                                    _weak?: boolean;
                                    [internalGroqTypeReferenceTo]?: "page";
                                  }
                                | {
                                    _ref: string;
                                    _type: "reference";
                                    _weak?: boolean;
                                    [internalGroqTypeReferenceTo]?: "post";
                                  };
                              slug: string | null;
                            }
                        > | null;
                        level?: number;
                        _type: "block";
                        _key: string;
                      }> | null;
                    } | null;
                    links: Array<{
                      _key: string;
                      label: string;
                      href: string | "#";
                    }> | null;
                  }
                | null;
            }
          | {
              _key: string;
              _type: "profileInfo";
              title: string | null;
              subtitle: string | null;
              mediaPlacement: "left" | "right";
              mediaSize: "default" | "threefourth";
              layout: "default" | "fullscreen";
              variant: "alternative" | "default";
              media:
                | {
                    _type: "image";
                    asset: {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                    } | null;
                    metadata: SanityImageDimensions | null;
                    hotspot: SanityImageHotspot | null;
                    crop: SanityImageCrop | null;
                    alt: null;
                    caption: null;
                  }
                | null
                | {
                    _type: "video";
                    title: string | null;
                    thumbnail: {
                      asset: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      } | null;
                      metadata: SanityImageDimensions | null;
                      hotspot: SanityImageHotspot | null;
                      crop: SanityImageCrop | null;
                      alt: null;
                      caption: null;
                    } | null;
                    videoUrl: string | null;
                  };
              content: {
                text: Array<{
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: "span";
                    _key: string;
                  }>;
                  style?: "normal";
                  listItem?: "bullet" | "number";
                  markDefs: Array<
                    | {
                        _key: string;
                        _type: "externalLink";
                        url: string;
                      }
                    | {
                        _key: string;
                        _type: "internalLink";
                        reference?:
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "archivePage";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "frontPage";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "page";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "post";
                            };
                        slug: string | null;
                      }
                  > | null;
                  level?: number;
                  _type: "block";
                  _key: string;
                }> | null;
              } | null;
              links: Array<{
                _key: string;
                label: string;
                href: string | "#";
              }> | null;
            }
          | {
              _key: string;
              _type: "textContent";
              title: string | null;
              alignment: "center" | "left" | "right";
              variant: "alternative" | "default";
              layout: "columns" | "default" | null;
              content: {
                text: Array<{
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: "span";
                    _key: string;
                  }>;
                  style?: "normal";
                  listItem?: "bullet" | "number";
                  markDefs: Array<
                    | {
                        _key: string;
                        _type: "externalLink";
                        url: string;
                      }
                    | {
                        _key: string;
                        _type: "internalLink";
                        reference?:
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "archivePage";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "frontPage";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "page";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "post";
                            };
                        slug: string | null;
                      }
                  > | null;
                  level?: number;
                  _type: "block";
                  _key: string;
                }> | null;
              } | null;
              links: Array<{
                _key: string;
                label: string;
                href: string | "#";
              }> | null;
            }
          | {
              _key: string;
              _type: "textMedia";
              title: string | null;
              mediaPlacement: "left" | "right";
              mediaSize: "default" | "threefourth";
              layout: "default" | "fullscreen";
              variant: "alternative" | "default";
              media:
                | {
                    _type: "image";
                    asset: {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                    } | null;
                    metadata: SanityImageDimensions | null;
                    hotspot: SanityImageHotspot | null;
                    crop: SanityImageCrop | null;
                    alt: null;
                    caption: null;
                  }
                | null
                | {
                    _type: "video";
                    title: string | null;
                    thumbnail: {
                      asset: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      } | null;
                      metadata: SanityImageDimensions | null;
                      hotspot: SanityImageHotspot | null;
                      crop: SanityImageCrop | null;
                      alt: null;
                      caption: null;
                    } | null;
                    videoUrl: string | null;
                  };
              content: {
                text: Array<{
                  children?: Array<{
                    marks?: Array<string>;
                    text?: string;
                    _type: "span";
                    _key: string;
                  }>;
                  style?: "normal";
                  listItem?: "bullet" | "number";
                  markDefs: Array<
                    | {
                        _key: string;
                        _type: "externalLink";
                        url: string;
                      }
                    | {
                        _key: string;
                        _type: "internalLink";
                        reference?:
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "archivePage";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "frontPage";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "page";
                            }
                          | {
                              _ref: string;
                              _type: "reference";
                              _weak?: boolean;
                              [internalGroqTypeReferenceTo]?: "post";
                            };
                        slug: string | null;
                      }
                  > | null;
                  level?: number;
                  _type: "block";
                  _key: string;
                }> | null;
              } | null;
              links: Array<{
                _key: string;
                label: string;
                href: string | "#";
              }> | null;
            }
        > | null;
      };
} | null;
// Variable: homePageQuery
// Query: *[_type == "frontPage"][0]{      _id,      _type,      title,      "content": pageBuilder {        _type,        blocks[]{          _key,_type,_type == "textMedia" => {  title,  mediaPlacement,  mediaSize,  layout,  variant,  "media": select(    mediaType == "image" => image {      "_type": "image",      asset,"metadata": asset->metadata.dimensions,hotspot,crop,alt,caption    },    mediaType == "video" => video {      "_type": "video",      title,thumbnail {  asset,"metadata": asset->metadata.dimensions,hotspot,crop,alt,caption},videoUrl    }  ),  content{    text[]{      ...,markDefs[]{  ...,  _type == "internalLink" => {    "slug": @.reference->slug.current  },  _type == "externalLink" => {    url  }},    }  },  links[]{    _key,    label,"href": select(  linkType == "internal" => coalesce(    select(      internalLink->_type == "archivePage" => internalLink->_id,       internalLink->_type != "archivePage" => internalLink->slug.current,      "#"    ),     "#"  ),  linkType == "external" => coalesce(    externalLink.url, "#"  ))  }},_type == "profileInfo" => {  title,  subtitle,  mediaPlacement,  mediaSize,  layout,  variant,  "media": select(    mediaType == "image" => image {      "_type": "image",      asset,"metadata": asset->metadata.dimensions,hotspot,crop,alt,caption    },    mediaType == "video" => video {      "_type": "video",      title,thumbnail {  asset,"metadata": asset->metadata.dimensions,hotspot,crop,alt,caption},videoUrl    }  ),  content{    text[]{      ...,markDefs[]{  ...,  _type == "internalLink" => {    "slug": @.reference->slug.current  },  _type == "externalLink" => {    url  }},    }  },  links[]{    _key,    label,"href": select(  linkType == "internal" => coalesce(    select(      internalLink->_type == "archivePage" => internalLink->_id,       internalLink->_type != "archivePage" => internalLink->slug.current,      "#"    ),     "#"  ),  linkType == "external" => coalesce(    externalLink.url, "#"  ))  }},_type == "textContent" => {  title,  alignment,  variant,  layout,  content{    text[]{      ...,markDefs[]{  ...,  _type == "internalLink" => {    "slug": @.reference->slug.current  },  _type == "externalLink" => {    url  }},    }  },  links[]{    _key,    label,"href": select(  linkType == "internal" => coalesce(    select(      internalLink->_type == "archivePage" => internalLink->_id,       internalLink->_type != "archivePage" => internalLink->slug.current,      "#"    ),     "#"  ),  linkType == "external" => coalesce(    externalLink.url, "#"  ))  }},_type == "accordionSection" => {  title,  layout,  content {    text[]{      ...,markDefs[]{  ...,  _type == "internalLink" => {    "slug": @.reference->slug.current  },  _type == "externalLink" => {    url  }},    }  },  links[]{    _key,    label,"href": select(  linkType == "internal" => coalesce(    select(      internalLink->_type == "archivePage" => internalLink->_id,       internalLink->_type != "archivePage" => internalLink->slug.current,      "#"    ),     "#"  ),  linkType == "external" => coalesce(    externalLink.url, "#"  ))  },  items[]{    _key,    title,    content {      text[]{        ...,markDefs[]{  ...,  _type == "internalLink" => {    "slug": @.reference->slug.current  },  _type == "externalLink" => {    url  }},      }    }  }},_type == "cardSection" => {  title,  variant,  content {    text[]{      ...,markDefs[]{  ...,  _type == "internalLink" => {    "slug": @.reference->slug.current  },  _type == "externalLink" => {    url  }},    }  },  links[]{    _key,    label,"href": select(  linkType == "internal" => coalesce(    select(      internalLink->_type == "archivePage" => internalLink->_id,       internalLink->_type != "archivePage" => internalLink->slug.current,      "#"    ),     "#"  ),  linkType == "external" => coalesce(    externalLink.url, "#"  ))  },  cards[]{    _key,    icon {      metadata {  inlineSvg,  size,  color}    },    title,    content {      text[]{        ...,markDefs[]{  ...,  _type == "internalLink" => {    "slug": @.reference->slug.current  },  _type == "externalLink" => {    url  }},      }    }  }},_type == "fullWidthImage" => {  title,  content{    text[]{      ...,markDefs[]{  ...,  _type == "internalLink" => {    "slug": @.reference->slug.current  },  _type == "externalLink" => {    url  }},    }  },  links[]{    _key,    label,"href": select(  linkType == "internal" => coalesce(    select(      internalLink->_type == "archivePage" => internalLink->_id,       internalLink->_type != "archivePage" => internalLink->slug.current,      "#"    ),     "#"  ),  linkType == "external" => coalesce(    externalLink.url, "#"  ))  },  image {    asset,"metadata": asset->metadata.dimensions,hotspot,crop,alt,caption  }},_type == "fullWidthVideo" => {  title,  content{    text[]{      ...,markDefs[]{  ...,  _type == "internalLink" => {    "slug": @.reference->slug.current  },  _type == "externalLink" => {    url  }},    }  },  links[]{    _key,    label,"href": select(  linkType == "internal" => coalesce(    select(      internalLink->_type == "archivePage" => internalLink->_id,       internalLink->_type != "archivePage" => internalLink->slug.current,      "#"    ),     "#"  ),  linkType == "external" => coalesce(    externalLink.url, "#"  ))  },  video {    title,thumbnail {  asset,"metadata": asset->metadata.dimensions,hotspot,crop,alt,caption},videoUrl  }},_type == "globalContent" => {  "globalBlock": @.globalBlock->blocks[0]{    _key,    _type,    _type == "textMedia" => {  title,  mediaPlacement,  mediaSize,  layout,  variant,  "media": select(    mediaType == "image" => image {      "_type": "image",      asset,"metadata": asset->metadata.dimensions,hotspot,crop,alt,caption    },    mediaType == "video" => video {      "_type": "video",      title,thumbnail {  asset,"metadata": asset->metadata.dimensions,hotspot,crop,alt,caption},videoUrl    }  ),  content{    text[]{      ...,markDefs[]{  ...,  _type == "internalLink" => {    "slug": @.reference->slug.current  },  _type == "externalLink" => {    url  }},    }  },  links[]{    _key,    label,"href": select(  linkType == "internal" => coalesce(    select(      internalLink->_type == "archivePage" => internalLink->_id,       internalLink->_type != "archivePage" => internalLink->slug.current,      "#"    ),     "#"  ),  linkType == "external" => coalesce(    externalLink.url, "#"  ))  }},_type == "profileInfo" => {  title,  subtitle,  mediaPlacement,  mediaSize,  layout,  variant,  "media": select(    mediaType == "image" => image {      "_type": "image",      asset,"metadata": asset->metadata.dimensions,hotspot,crop,alt,caption    },    mediaType == "video" => video {      "_type": "video",      title,thumbnail {  asset,"metadata": asset->metadata.dimensions,hotspot,crop,alt,caption},videoUrl    }  ),  content{    text[]{      ...,markDefs[]{  ...,  _type == "internalLink" => {    "slug": @.reference->slug.current  },  _type == "externalLink" => {    url  }},    }  },  links[]{    _key,    label,"href": select(  linkType == "internal" => coalesce(    select(      internalLink->_type == "archivePage" => internalLink->_id,       internalLink->_type != "archivePage" => internalLink->slug.current,      "#"    ),     "#"  ),  linkType == "external" => coalesce(    externalLink.url, "#"  ))  }},_type == "textContent" => {  title,  alignment,  variant,  layout,  content{    text[]{      ...,markDefs[]{  ...,  _type == "internalLink" => {    "slug": @.reference->slug.current  },  _type == "externalLink" => {    url  }},    }  },  links[]{    _key,    label,"href": select(  linkType == "internal" => coalesce(    select(      internalLink->_type == "archivePage" => internalLink->_id,       internalLink->_type != "archivePage" => internalLink->slug.current,      "#"    ),     "#"  ),  linkType == "external" => coalesce(    externalLink.url, "#"  ))  }},_type == "accordionSection" => {  title,  layout,  content {    text[]{      ...,markDefs[]{  ...,  _type == "internalLink" => {    "slug": @.reference->slug.current  },  _type == "externalLink" => {    url  }},    }  },  links[]{    _key,    label,"href": select(  linkType == "internal" => coalesce(    select(      internalLink->_type == "archivePage" => internalLink->_id,       internalLink->_type != "archivePage" => internalLink->slug.current,      "#"    ),     "#"  ),  linkType == "external" => coalesce(    externalLink.url, "#"  ))  },  items[]{    _key,    title,    content {      text[]{        ...,markDefs[]{  ...,  _type == "internalLink" => {    "slug": @.reference->slug.current  },  _type == "externalLink" => {    url  }},      }    }  }},_type == "cardSection" => {  title,  variant,  content {    text[]{      ...,markDefs[]{  ...,  _type == "internalLink" => {    "slug": @.reference->slug.current  },  _type == "externalLink" => {    url  }},    }  },  links[]{    _key,    label,"href": select(  linkType == "internal" => coalesce(    select(      internalLink->_type == "archivePage" => internalLink->_id,       internalLink->_type != "archivePage" => internalLink->slug.current,      "#"    ),     "#"  ),  linkType == "external" => coalesce(    externalLink.url, "#"  ))  },  cards[]{    _key,    icon {      metadata {  inlineSvg,  size,  color}    },    title,    content {      text[]{        ...,markDefs[]{  ...,  _type == "internalLink" => {    "slug": @.reference->slug.current  },  _type == "externalLink" => {    url  }},      }    }  }},_type == "fullWidthImage" => {  title,  content{    text[]{      ...,markDefs[]{  ...,  _type == "internalLink" => {    "slug": @.reference->slug.current  },  _type == "externalLink" => {    url  }},    }  },  links[]{    _key,    label,"href": select(  linkType == "internal" => coalesce(    select(      internalLink->_type == "archivePage" => internalLink->_id,       internalLink->_type != "archivePage" => internalLink->slug.current,      "#"    ),     "#"  ),  linkType == "external" => coalesce(    externalLink.url, "#"  ))  },  image {    asset,"metadata": asset->metadata.dimensions,hotspot,crop,alt,caption  }},_type == "fullWidthVideo" => {  title,  content{    text[]{      ...,markDefs[]{  ...,  _type == "internalLink" => {    "slug": @.reference->slug.current  },  _type == "externalLink" => {    url  }},    }  },  links[]{    _key,    label,"href": select(  linkType == "internal" => coalesce(    select(      internalLink->_type == "archivePage" => internalLink->_id,       internalLink->_type != "archivePage" => internalLink->slug.current,      "#"    ),     "#"  ),  linkType == "external" => coalesce(    externalLink.url, "#"  ))  },  video {    title,thumbnail {  asset,"metadata": asset->metadata.dimensions,hotspot,crop,alt,caption},videoUrl  }}  }}        }      }    }
export type HomePageQueryResult = {
  _id: string;
  _type: "frontPage";
  title: string | null;
  content: {
    _type: "pageBuilder";
    blocks: Array<
      | {
          _key: string;
          _type: "accordionSection";
          title: string | null;
          layout: "centered " | "default";
          content: {
            text: Array<{
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "normal";
              listItem?: "bullet" | "number";
              markDefs: Array<
                | {
                    _key: string;
                    _type: "externalLink";
                    url: string;
                  }
                | {
                    _key: string;
                    _type: "internalLink";
                    reference?:
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "archivePage";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "frontPage";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "page";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "post";
                        };
                    slug: string | null;
                  }
              > | null;
              level?: number;
              _type: "block";
              _key: string;
            }> | null;
          } | null;
          links: Array<{
            _key: string;
            label: string;
            href: string | "#";
          }> | null;
          items: Array<{
            _key: string;
            title: string;
            content: {
              text: Array<{
                children?: Array<{
                  marks?: Array<string>;
                  text?: string;
                  _type: "span";
                  _key: string;
                }>;
                style?: "normal";
                listItem?: "bullet" | "number";
                markDefs: Array<
                  | {
                      _key: string;
                      _type: "externalLink";
                      url: string;
                    }
                  | {
                      _key: string;
                      _type: "internalLink";
                      reference?:
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "archivePage";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "frontPage";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "page";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "post";
                          };
                      slug: string | null;
                    }
                > | null;
                level?: number;
                _type: "block";
                _key: string;
              }> | null;
            };
          }> | null;
        }
      | {
          _key: string;
          _type: "cardSection";
          title: string | null;
          variant: "alternative" | "default";
          content: {
            text: Array<{
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "normal";
              listItem?: "bullet" | "number";
              markDefs: Array<
                | {
                    _key: string;
                    _type: "externalLink";
                    url: string;
                  }
                | {
                    _key: string;
                    _type: "internalLink";
                    reference?:
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "archivePage";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "frontPage";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "page";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "post";
                        };
                    slug: string | null;
                  }
              > | null;
              level?: number;
              _type: "block";
              _key: string;
            }> | null;
          } | null;
          links: Array<{
            _key: string;
            label: string;
            href: string | "#";
          }> | null;
          cards: Array<{
            _key: string;
            icon: {
              metadata: {
                inlineSvg: string | null;
                size: IconManagerSize | null;
                color: IconManagerColor | null;
              } | null;
            } | null;
            title: string | null;
            content: {
              text: Array<{
                children?: Array<{
                  marks?: Array<string>;
                  text?: string;
                  _type: "span";
                  _key: string;
                }>;
                style?: "normal";
                listItem?: "bullet" | "number";
                markDefs: Array<
                  | {
                      _key: string;
                      _type: "externalLink";
                      url: string;
                    }
                  | {
                      _key: string;
                      _type: "internalLink";
                      reference?:
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "archivePage";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "frontPage";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "page";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "post";
                          };
                      slug: string | null;
                    }
                > | null;
                level?: number;
                _type: "block";
                _key: string;
              }> | null;
            } | null;
          }> | null;
        }
      | {
          _key: string;
          _type: "fullWidthImage";
          title: string | null;
          content: {
            text: Array<{
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "normal";
              listItem?: "bullet" | "number";
              markDefs: Array<
                | {
                    _key: string;
                    _type: "externalLink";
                    url: string;
                  }
                | {
                    _key: string;
                    _type: "internalLink";
                    reference?:
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "archivePage";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "frontPage";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "page";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "post";
                        };
                    slug: string | null;
                  }
              > | null;
              level?: number;
              _type: "block";
              _key: string;
            }> | null;
          } | null;
          links: Array<{
            _key: string;
            label: string;
            href: string | "#";
          }> | null;
          image: {
            asset: {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
            } | null;
            metadata: SanityImageDimensions | null;
            hotspot: SanityImageHotspot | null;
            crop: SanityImageCrop | null;
            alt: null;
            caption: null;
          };
        }
      | {
          _key: string;
          _type: "fullWidthVideo";
          title: string | null;
          content: {
            text: Array<{
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "normal";
              listItem?: "bullet" | "number";
              markDefs: Array<
                | {
                    _key: string;
                    _type: "externalLink";
                    url: string;
                  }
                | {
                    _key: string;
                    _type: "internalLink";
                    reference?:
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "archivePage";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "frontPage";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "page";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "post";
                        };
                    slug: string | null;
                  }
              > | null;
              level?: number;
              _type: "block";
              _key: string;
            }> | null;
          } | null;
          links: Array<{
            _key: string;
            label: string;
            href: string | "#";
          }> | null;
          video: {
            title: string | null;
            thumbnail: {
              asset: {
                _ref: string;
                _type: "reference";
                _weak?: boolean;
                [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
              } | null;
              metadata: SanityImageDimensions | null;
              hotspot: SanityImageHotspot | null;
              crop: SanityImageCrop | null;
              alt: null;
              caption: null;
            } | null;
            videoUrl: string | null;
          } | null;
        }
      | {
          _key: string;
          _type: "globalContent";
          globalBlock:
            | {
                _key: string;
                _type: "accordionSection";
                title: string | null;
                layout: "centered " | "default";
                content: {
                  text: Array<{
                    children?: Array<{
                      marks?: Array<string>;
                      text?: string;
                      _type: "span";
                      _key: string;
                    }>;
                    style?: "normal";
                    listItem?: "bullet" | "number";
                    markDefs: Array<
                      | {
                          _key: string;
                          _type: "externalLink";
                          url: string;
                        }
                      | {
                          _key: string;
                          _type: "internalLink";
                          reference?:
                            | {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "archivePage";
                              }
                            | {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "frontPage";
                              }
                            | {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "page";
                              }
                            | {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "post";
                              };
                          slug: string | null;
                        }
                    > | null;
                    level?: number;
                    _type: "block";
                    _key: string;
                  }> | null;
                } | null;
                links: Array<{
                  _key: string;
                  label: string;
                  href: string | "#";
                }> | null;
                items: Array<{
                  _key: string;
                  title: string;
                  content: {
                    text: Array<{
                      children?: Array<{
                        marks?: Array<string>;
                        text?: string;
                        _type: "span";
                        _key: string;
                      }>;
                      style?: "normal";
                      listItem?: "bullet" | "number";
                      markDefs: Array<
                        | {
                            _key: string;
                            _type: "externalLink";
                            url: string;
                          }
                        | {
                            _key: string;
                            _type: "internalLink";
                            reference?:
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "archivePage";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "frontPage";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "page";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "post";
                                };
                            slug: string | null;
                          }
                      > | null;
                      level?: number;
                      _type: "block";
                      _key: string;
                    }> | null;
                  };
                }> | null;
              }
            | {
                _key: string;
                _type: "cardSection";
                title: string | null;
                variant: "alternative" | "default";
                content: {
                  text: Array<{
                    children?: Array<{
                      marks?: Array<string>;
                      text?: string;
                      _type: "span";
                      _key: string;
                    }>;
                    style?: "normal";
                    listItem?: "bullet" | "number";
                    markDefs: Array<
                      | {
                          _key: string;
                          _type: "externalLink";
                          url: string;
                        }
                      | {
                          _key: string;
                          _type: "internalLink";
                          reference?:
                            | {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "archivePage";
                              }
                            | {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "frontPage";
                              }
                            | {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "page";
                              }
                            | {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "post";
                              };
                          slug: string | null;
                        }
                    > | null;
                    level?: number;
                    _type: "block";
                    _key: string;
                  }> | null;
                } | null;
                links: Array<{
                  _key: string;
                  label: string;
                  href: string | "#";
                }> | null;
                cards: Array<{
                  _key: string;
                  icon: {
                    metadata: {
                      inlineSvg: string | null;
                      size: IconManagerSize | null;
                      color: IconManagerColor | null;
                    } | null;
                  } | null;
                  title: string | null;
                  content: {
                    text: Array<{
                      children?: Array<{
                        marks?: Array<string>;
                        text?: string;
                        _type: "span";
                        _key: string;
                      }>;
                      style?: "normal";
                      listItem?: "bullet" | "number";
                      markDefs: Array<
                        | {
                            _key: string;
                            _type: "externalLink";
                            url: string;
                          }
                        | {
                            _key: string;
                            _type: "internalLink";
                            reference?:
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "archivePage";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "frontPage";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "page";
                                }
                              | {
                                  _ref: string;
                                  _type: "reference";
                                  _weak?: boolean;
                                  [internalGroqTypeReferenceTo]?: "post";
                                };
                            slug: string | null;
                          }
                      > | null;
                      level?: number;
                      _type: "block";
                      _key: string;
                    }> | null;
                  } | null;
                }> | null;
              }
            | {
                _key: string;
                _type: "fullWidthImage";
                title: string | null;
                content: {
                  text: Array<{
                    children?: Array<{
                      marks?: Array<string>;
                      text?: string;
                      _type: "span";
                      _key: string;
                    }>;
                    style?: "normal";
                    listItem?: "bullet" | "number";
                    markDefs: Array<
                      | {
                          _key: string;
                          _type: "externalLink";
                          url: string;
                        }
                      | {
                          _key: string;
                          _type: "internalLink";
                          reference?:
                            | {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "archivePage";
                              }
                            | {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "frontPage";
                              }
                            | {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "page";
                              }
                            | {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "post";
                              };
                          slug: string | null;
                        }
                    > | null;
                    level?: number;
                    _type: "block";
                    _key: string;
                  }> | null;
                } | null;
                links: Array<{
                  _key: string;
                  label: string;
                  href: string | "#";
                }> | null;
                image: {
                  asset: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  } | null;
                  metadata: SanityImageDimensions | null;
                  hotspot: SanityImageHotspot | null;
                  crop: SanityImageCrop | null;
                  alt: null;
                  caption: null;
                };
              }
            | {
                _key: string;
                _type: "fullWidthVideo";
                title: string | null;
                content: {
                  text: Array<{
                    children?: Array<{
                      marks?: Array<string>;
                      text?: string;
                      _type: "span";
                      _key: string;
                    }>;
                    style?: "normal";
                    listItem?: "bullet" | "number";
                    markDefs: Array<
                      | {
                          _key: string;
                          _type: "externalLink";
                          url: string;
                        }
                      | {
                          _key: string;
                          _type: "internalLink";
                          reference?:
                            | {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "archivePage";
                              }
                            | {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "frontPage";
                              }
                            | {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "page";
                              }
                            | {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "post";
                              };
                          slug: string | null;
                        }
                    > | null;
                    level?: number;
                    _type: "block";
                    _key: string;
                  }> | null;
                } | null;
                links: Array<{
                  _key: string;
                  label: string;
                  href: string | "#";
                }> | null;
                video: {
                  title: string | null;
                  thumbnail: {
                    asset: {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                    } | null;
                    metadata: SanityImageDimensions | null;
                    hotspot: SanityImageHotspot | null;
                    crop: SanityImageCrop | null;
                    alt: null;
                    caption: null;
                  } | null;
                  videoUrl: string | null;
                } | null;
              }
            | {
                _key: string;
                _type: "profileInfo";
                title: string | null;
                subtitle: string | null;
                mediaPlacement: "left" | "right";
                mediaSize: "default" | "threefourth";
                layout: "default" | "fullscreen";
                variant: "alternative" | "default";
                media:
                  | {
                      _type: "image";
                      asset: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      } | null;
                      metadata: SanityImageDimensions | null;
                      hotspot: SanityImageHotspot | null;
                      crop: SanityImageCrop | null;
                      alt: null;
                      caption: null;
                    }
                  | null
                  | {
                      _type: "video";
                      title: string | null;
                      thumbnail: {
                        asset: {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                        } | null;
                        metadata: SanityImageDimensions | null;
                        hotspot: SanityImageHotspot | null;
                        crop: SanityImageCrop | null;
                        alt: null;
                        caption: null;
                      } | null;
                      videoUrl: string | null;
                    };
                content: {
                  text: Array<{
                    children?: Array<{
                      marks?: Array<string>;
                      text?: string;
                      _type: "span";
                      _key: string;
                    }>;
                    style?: "normal";
                    listItem?: "bullet" | "number";
                    markDefs: Array<
                      | {
                          _key: string;
                          _type: "externalLink";
                          url: string;
                        }
                      | {
                          _key: string;
                          _type: "internalLink";
                          reference?:
                            | {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "archivePage";
                              }
                            | {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "frontPage";
                              }
                            | {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "page";
                              }
                            | {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "post";
                              };
                          slug: string | null;
                        }
                    > | null;
                    level?: number;
                    _type: "block";
                    _key: string;
                  }> | null;
                } | null;
                links: Array<{
                  _key: string;
                  label: string;
                  href: string | "#";
                }> | null;
              }
            | {
                _key: string;
                _type: "textContent";
                title: string | null;
                alignment: "center" | "left" | "right";
                variant: "alternative" | "default";
                layout: "columns" | "default" | null;
                content: {
                  text: Array<{
                    children?: Array<{
                      marks?: Array<string>;
                      text?: string;
                      _type: "span";
                      _key: string;
                    }>;
                    style?: "normal";
                    listItem?: "bullet" | "number";
                    markDefs: Array<
                      | {
                          _key: string;
                          _type: "externalLink";
                          url: string;
                        }
                      | {
                          _key: string;
                          _type: "internalLink";
                          reference?:
                            | {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "archivePage";
                              }
                            | {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "frontPage";
                              }
                            | {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "page";
                              }
                            | {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "post";
                              };
                          slug: string | null;
                        }
                    > | null;
                    level?: number;
                    _type: "block";
                    _key: string;
                  }> | null;
                } | null;
                links: Array<{
                  _key: string;
                  label: string;
                  href: string | "#";
                }> | null;
              }
            | {
                _key: string;
                _type: "textMedia";
                title: string | null;
                mediaPlacement: "left" | "right";
                mediaSize: "default" | "threefourth";
                layout: "default" | "fullscreen";
                variant: "alternative" | "default";
                media:
                  | {
                      _type: "image";
                      asset: {
                        _ref: string;
                        _type: "reference";
                        _weak?: boolean;
                        [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                      } | null;
                      metadata: SanityImageDimensions | null;
                      hotspot: SanityImageHotspot | null;
                      crop: SanityImageCrop | null;
                      alt: null;
                      caption: null;
                    }
                  | null
                  | {
                      _type: "video";
                      title: string | null;
                      thumbnail: {
                        asset: {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                        } | null;
                        metadata: SanityImageDimensions | null;
                        hotspot: SanityImageHotspot | null;
                        crop: SanityImageCrop | null;
                        alt: null;
                        caption: null;
                      } | null;
                      videoUrl: string | null;
                    };
                content: {
                  text: Array<{
                    children?: Array<{
                      marks?: Array<string>;
                      text?: string;
                      _type: "span";
                      _key: string;
                    }>;
                    style?: "normal";
                    listItem?: "bullet" | "number";
                    markDefs: Array<
                      | {
                          _key: string;
                          _type: "externalLink";
                          url: string;
                        }
                      | {
                          _key: string;
                          _type: "internalLink";
                          reference?:
                            | {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "archivePage";
                              }
                            | {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "frontPage";
                              }
                            | {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "page";
                              }
                            | {
                                _ref: string;
                                _type: "reference";
                                _weak?: boolean;
                                [internalGroqTypeReferenceTo]?: "post";
                              };
                          slug: string | null;
                        }
                    > | null;
                    level?: number;
                    _type: "block";
                    _key: string;
                  }> | null;
                } | null;
                links: Array<{
                  _key: string;
                  label: string;
                  href: string | "#";
                }> | null;
              }
            | null;
        }
      | {
          _key: string;
          _type: "profileInfo";
          title: string | null;
          subtitle: string | null;
          mediaPlacement: "left" | "right";
          mediaSize: "default" | "threefourth";
          layout: "default" | "fullscreen";
          variant: "alternative" | "default";
          media:
            | {
                _type: "image";
                asset: {
                  _ref: string;
                  _type: "reference";
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                } | null;
                metadata: SanityImageDimensions | null;
                hotspot: SanityImageHotspot | null;
                crop: SanityImageCrop | null;
                alt: null;
                caption: null;
              }
            | null
            | {
                _type: "video";
                title: string | null;
                thumbnail: {
                  asset: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  } | null;
                  metadata: SanityImageDimensions | null;
                  hotspot: SanityImageHotspot | null;
                  crop: SanityImageCrop | null;
                  alt: null;
                  caption: null;
                } | null;
                videoUrl: string | null;
              };
          content: {
            text: Array<{
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "normal";
              listItem?: "bullet" | "number";
              markDefs: Array<
                | {
                    _key: string;
                    _type: "externalLink";
                    url: string;
                  }
                | {
                    _key: string;
                    _type: "internalLink";
                    reference?:
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "archivePage";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "frontPage";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "page";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "post";
                        };
                    slug: string | null;
                  }
              > | null;
              level?: number;
              _type: "block";
              _key: string;
            }> | null;
          } | null;
          links: Array<{
            _key: string;
            label: string;
            href: string | "#";
          }> | null;
        }
      | {
          _key: string;
          _type: "textContent";
          title: string | null;
          alignment: "center" | "left" | "right";
          variant: "alternative" | "default";
          layout: "columns" | "default" | null;
          content: {
            text: Array<{
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "normal";
              listItem?: "bullet" | "number";
              markDefs: Array<
                | {
                    _key: string;
                    _type: "externalLink";
                    url: string;
                  }
                | {
                    _key: string;
                    _type: "internalLink";
                    reference?:
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "archivePage";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "frontPage";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "page";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "post";
                        };
                    slug: string | null;
                  }
              > | null;
              level?: number;
              _type: "block";
              _key: string;
            }> | null;
          } | null;
          links: Array<{
            _key: string;
            label: string;
            href: string | "#";
          }> | null;
        }
      | {
          _key: string;
          _type: "textMedia";
          title: string | null;
          mediaPlacement: "left" | "right";
          mediaSize: "default" | "threefourth";
          layout: "default" | "fullscreen";
          variant: "alternative" | "default";
          media:
            | {
                _type: "image";
                asset: {
                  _ref: string;
                  _type: "reference";
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                } | null;
                metadata: SanityImageDimensions | null;
                hotspot: SanityImageHotspot | null;
                crop: SanityImageCrop | null;
                alt: null;
                caption: null;
              }
            | null
            | {
                _type: "video";
                title: string | null;
                thumbnail: {
                  asset: {
                    _ref: string;
                    _type: "reference";
                    _weak?: boolean;
                    [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
                  } | null;
                  metadata: SanityImageDimensions | null;
                  hotspot: SanityImageHotspot | null;
                  crop: SanityImageCrop | null;
                  alt: null;
                  caption: null;
                } | null;
                videoUrl: string | null;
              };
          content: {
            text: Array<{
              children?: Array<{
                marks?: Array<string>;
                text?: string;
                _type: "span";
                _key: string;
              }>;
              style?: "normal";
              listItem?: "bullet" | "number";
              markDefs: Array<
                | {
                    _key: string;
                    _type: "externalLink";
                    url: string;
                  }
                | {
                    _key: string;
                    _type: "internalLink";
                    reference?:
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "archivePage";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "frontPage";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "page";
                        }
                      | {
                          _ref: string;
                          _type: "reference";
                          _weak?: boolean;
                          [internalGroqTypeReferenceTo]?: "post";
                        };
                    slug: string | null;
                  }
              > | null;
              level?: number;
              _type: "block";
              _key: string;
            }> | null;
          } | null;
          links: Array<{
            _key: string;
            label: string;
            href: string | "#";
          }> | null;
        }
    > | null;
  } | null;
} | null;

// Source: ./src/data/post.ts
// Variable: postQuery
// Query: *[_type == "post" && slug.current == $slug][0]{    title,     "tag": tags[0]->title,     _createdAt,    featuredImage {      asset,"metadata": asset->metadata.dimensions,hotspot,crop,alt,caption    },    content {      text[]{        ...,markDefs[]{  ...,  _type == "internalLink" => {    "slug": @.reference->slug.current  },  _type == "externalLink" => {    url  }},_type == "image" => {  asset,"metadata": asset->metadata.dimensions,hotspot,crop,alt,caption},_type == "video" => {  title,thumbnail {  asset,"metadata": asset->metadata.dimensions,hotspot,crop,alt,caption},videoUrl},_type == "accordion" => {  title,items[]{  _key,  title,  content{    text[]{      ...,markDefs[]{  ...,  _type == "internalLink" => {    "slug": @.reference->slug.current  },  _type == "externalLink" => {    url  }},    }  }}}      }    }  }
export type PostQueryResult = {
  title: string;
  tag: string | null;
  _createdAt: string;
  featuredImage: {
    asset: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    } | null;
    metadata: SanityImageDimensions | null;
    hotspot: SanityImageHotspot | null;
    crop: SanityImageCrop | null;
    alt: null;
    caption: null;
  } | null;
  content: {
    text: Array<
      | {
          _key: string;
          _type: "accordion";
          title: string | null;
          items: Array<{
            _key: string;
            title: string;
            content: {
              text: Array<{
                children?: Array<{
                  marks?: Array<string>;
                  text?: string;
                  _type: "span";
                  _key: string;
                }>;
                style?: "normal";
                listItem?: "bullet" | "number";
                markDefs: Array<
                  | {
                      _key: string;
                      _type: "externalLink";
                      url: string;
                    }
                  | {
                      _key: string;
                      _type: "internalLink";
                      reference?:
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "archivePage";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "frontPage";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "page";
                          }
                        | {
                            _ref: string;
                            _type: "reference";
                            _weak?: boolean;
                            [internalGroqTypeReferenceTo]?: "post";
                          };
                      slug: string | null;
                    }
                > | null;
                level?: number;
                _type: "block";
                _key: string;
              }> | null;
            } | null;
          }> | null;
          markDefs: null;
        }
      | {
          children?: Array<{
            marks?: Array<string>;
            text?: string;
            _type: "span";
            _key: string;
          }>;
          style?: "blockquote" | "h2" | "h3" | "h4" | "normal";
          listItem?: "bullet" | "number";
          markDefs: Array<
            | {
                _key: string;
                _type: "externalLink";
                url: string;
              }
            | {
                _key: string;
                _type: "internalLink";
                reference?:
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "archivePage";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "frontPage";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "page";
                    }
                  | {
                      _ref: string;
                      _type: "reference";
                      _weak?: boolean;
                      [internalGroqTypeReferenceTo]?: "post";
                    };
                slug: string | null;
              }
          > | null;
          level?: number;
          _type: "block";
          _key: string;
        }
      | {
          asset: {
            _ref: string;
            _type: "reference";
            _weak?: boolean;
            [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
          } | null;
          hotspot: SanityImageHotspot | null;
          crop: SanityImageCrop | null;
          alt: string;
          caption: string | null;
          _type: "image";
          _key: string;
          markDefs: null;
          metadata: SanityImageDimensions | null;
        }
      | {
          _key: string;
          _type: "video";
          title: string | null;
          thumbnail: {
            asset: {
              _ref: string;
              _type: "reference";
              _weak?: boolean;
              [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
            } | null;
            metadata: SanityImageDimensions | null;
            hotspot: SanityImageHotspot | null;
            crop: SanityImageCrop | null;
            alt: null;
            caption: null;
          } | null;
          videoUrl: string | null;
          markDefs: null;
        }
    > | null;
  } | null;
} | null;
// Variable: postsQuery
// Query: *[_type == "post"]|order(_createdAt desc)[$start...$limit]{      _id,      title,      slug,      _createdAt,      featuredImage {        asset,"metadata": asset->metadata.dimensions,hotspot,crop,alt,caption      },      "excerpt": pt::text(content.text[0]),      "tag": tags[0]->title    }
export type PostsQueryResult = Array<{
  _id: string;
  title: string;
  slug: Slug;
  _createdAt: string;
  featuredImage: {
    asset: {
      _ref: string;
      _type: "reference";
      _weak?: boolean;
      [internalGroqTypeReferenceTo]?: "sanity.imageAsset";
    } | null;
    metadata: SanityImageDimensions | null;
    hotspot: SanityImageHotspot | null;
    crop: SanityImageCrop | null;
    alt: null;
    caption: null;
  } | null;
  excerpt: string;
  tag: string | null;
}>;
// Variable: archiveData
// Query: *[_type == "archivePage" && _id == $id][0]{        title,        "slug": slug.current,        description {          text[]{            ...,markDefs[]{  ...,  _type == "internalLink" => {    "slug": @.reference->slug.current  },  _type == "externalLink" => {    url  }},          }        },        "total": round(count(*[_type == "post"]) / $perPage)      }
export type ArchiveDataResult = {
  title: string;
  slug: null;
  description: {
    text: Array<{
      children?: Array<{
        marks?: Array<string>;
        text?: string;
        _type: "span";
        _key: string;
      }>;
      style?: "normal";
      listItem?: "bullet" | "number";
      markDefs: Array<
        | {
            _key: string;
            _type: "externalLink";
            url: string;
          }
        | {
            _key: string;
            _type: "internalLink";
            reference?:
              | {
                  _ref: string;
                  _type: "reference";
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: "archivePage";
                }
              | {
                  _ref: string;
                  _type: "reference";
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: "frontPage";
                }
              | {
                  _ref: string;
                  _type: "reference";
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: "page";
                }
              | {
                  _ref: string;
                  _type: "reference";
                  _weak?: boolean;
                  [internalGroqTypeReferenceTo]?: "post";
                };
            slug: string | null;
          }
      > | null;
      level?: number;
      _type: "block";
      _key: string;
    }> | null;
  } | null;
  total: number | null;
} | null;

// Query TypeMap
import "@sanity/client";
declare module "@sanity/client" {
  interface SanityQueries {
    '*[_type == "siteSettings"][0]{\n      googleTagManagerId,\n      "header": {\n          title,\n          logo {\n            \nasset,\n"metadata": asset->metadata.dimensions,\nhotspot,\ncrop,\nalt,\ncaption\n\n          },\n          headerNavigation[]{\n            _key,\n            \nicon {\n  \nmetadata {\n  inlineSvg,\n  size,\n  color\n}\n\n},\nlabel,\n"href": select(\n  linkType == "internal" => coalesce(\n    select(\n      internalLink->_type == "archivePage" => internalLink->_id, \n      internalLink->_type != "archivePage" => internalLink->slug.current,\n      "#"\n    ), \n    "#"\n  ),\n  linkType == "external" => coalesce(\n    externalLink.url, "#"\n  )\n)\n\n          }\n        }\n      }': LayoutQueryResult;
    '*[_type == $type && slug.current == $slug][0]{\n      \n"title": coalesce(seo.title, title),\n"description": seo.description,\n"featuredImage": coalesce(seo.featuredImage, mainImage),\n"index": seo.index,\n"follow": seo.follow,\n"canonical": seo.canonical,\n\n    }': ContentMetaQueryResult;
    '*[_type == "frontPage"][0]{\n      \n"title": coalesce(seo.title, title),\n"description": seo.description,\n"featuredImage": coalesce(seo.featuredImage, mainImage),\n"index": seo.index,\n"follow": seo.follow,\n"canonical": seo.canonical,\n\n    }': HomePageMetaResult;
    '*[_type == "siteSettings"][0]{\n      \n"title": coalesce(seo.title, title),\n"description": seo.description,\n"featuredImage": coalesce(seo.featuredImage, mainImage),\n"index": seo.index,\n"follow": seo.follow,\n"canonical": seo.canonical,\n\n    }': LayoutMetaResult;
    '*[_type == "page" && slug.current == $slug][0]{\n      _id,\n      _type,\n      title,\n      "content": select(\n        contentType == "text" => content{\n          _type,\n          "image": ^.image {\n            \nasset,\n"metadata": asset->metadata.dimensions,\nhotspot,\ncrop,\nalt,\ncaption\n\n          },\n          text[]{\n            \n...,\nmarkDefs[]{\n  ...,\n  _type == "internalLink" => {\n    "slug": @.reference->slug.current\n  },\n  _type == "externalLink" => {\n    url\n  }\n},\n_type == "image" => {\n  \nasset,\n"metadata": asset->metadata.dimensions,\nhotspot,\ncrop,\nalt,\ncaption\n\n},\n_type == "video" => {\n  \ntitle,\nthumbnail {\n  \nasset,\n"metadata": asset->metadata.dimensions,\nhotspot,\ncrop,\nalt,\ncaption\n\n},\nvideoUrl\n\n},\n_type == "accordion" => {\n  \ntitle,\nitems[]{\n  _key,\n  title,\n  content{\n    text[]{\n      \n...,\nmarkDefs[]{\n  ...,\n  _type == "internalLink" => {\n    "slug": @.reference->slug.current\n  },\n  _type == "externalLink" => {\n    url\n  }\n},\n\n    }\n  }\n}\n\n}\n\n          },\n          "tableOfContents": text[style == "h2"]{\n            _key,\n            "text": coalesce(children[0].text, "")\n          },\n        },\n        contentType == "builder" => pageBuilder {\n          _type,\n          blocks[]{\n            \n_key,\n_type,\n\n_type == "textMedia" => {\n  title,\n  mediaPlacement,\n  mediaSize,\n  layout,\n  variant,\n  "media": select(\n    mediaType == "image" => image {\n      "_type": "image",\n      \nasset,\n"metadata": asset->metadata.dimensions,\nhotspot,\ncrop,\nalt,\ncaption\n\n    },\n    mediaType == "video" => video {\n      "_type": "video",\n      \ntitle,\nthumbnail {\n  \nasset,\n"metadata": asset->metadata.dimensions,\nhotspot,\ncrop,\nalt,\ncaption\n\n},\nvideoUrl\n\n    }\n  ),\n  content{\n    text[]{\n      \n...,\nmarkDefs[]{\n  ...,\n  _type == "internalLink" => {\n    "slug": @.reference->slug.current\n  },\n  _type == "externalLink" => {\n    url\n  }\n},\n\n    }\n  },\n  links[]{\n    _key,\n    \nlabel,\n"href": select(\n  linkType == "internal" => coalesce(\n    select(\n      internalLink->_type == "archivePage" => internalLink->_id, \n      internalLink->_type != "archivePage" => internalLink->slug.current,\n      "#"\n    ), \n    "#"\n  ),\n  linkType == "external" => coalesce(\n    externalLink.url, "#"\n  )\n)\n\n  }\n},\n_type == "profileInfo" => {\n  title,\n  subtitle,\n  mediaPlacement,\n  mediaSize,\n  layout,\n  variant,\n  "media": select(\n    mediaType == "image" => image {\n      "_type": "image",\n      \nasset,\n"metadata": asset->metadata.dimensions,\nhotspot,\ncrop,\nalt,\ncaption\n\n    },\n    mediaType == "video" => video {\n      "_type": "video",\n      \ntitle,\nthumbnail {\n  \nasset,\n"metadata": asset->metadata.dimensions,\nhotspot,\ncrop,\nalt,\ncaption\n\n},\nvideoUrl\n\n    }\n  ),\n  content{\n    text[]{\n      \n...,\nmarkDefs[]{\n  ...,\n  _type == "internalLink" => {\n    "slug": @.reference->slug.current\n  },\n  _type == "externalLink" => {\n    url\n  }\n},\n\n    }\n  },\n  links[]{\n    _key,\n    \nlabel,\n"href": select(\n  linkType == "internal" => coalesce(\n    select(\n      internalLink->_type == "archivePage" => internalLink->_id, \n      internalLink->_type != "archivePage" => internalLink->slug.current,\n      "#"\n    ), \n    "#"\n  ),\n  linkType == "external" => coalesce(\n    externalLink.url, "#"\n  )\n)\n\n  }\n},\n_type == "textContent" => {\n  title,\n  alignment,\n  variant,\n  layout,\n  content{\n    text[]{\n      \n...,\nmarkDefs[]{\n  ...,\n  _type == "internalLink" => {\n    "slug": @.reference->slug.current\n  },\n  _type == "externalLink" => {\n    url\n  }\n},\n\n    }\n  },\n  links[]{\n    _key,\n    \nlabel,\n"href": select(\n  linkType == "internal" => coalesce(\n    select(\n      internalLink->_type == "archivePage" => internalLink->_id, \n      internalLink->_type != "archivePage" => internalLink->slug.current,\n      "#"\n    ), \n    "#"\n  ),\n  linkType == "external" => coalesce(\n    externalLink.url, "#"\n  )\n)\n\n  }\n},\n_type == "accordionSection" => {\n  title,\n  layout,\n  content {\n    text[]{\n      \n...,\nmarkDefs[]{\n  ...,\n  _type == "internalLink" => {\n    "slug": @.reference->slug.current\n  },\n  _type == "externalLink" => {\n    url\n  }\n},\n\n    }\n  },\n  links[]{\n    _key,\n    \nlabel,\n"href": select(\n  linkType == "internal" => coalesce(\n    select(\n      internalLink->_type == "archivePage" => internalLink->_id, \n      internalLink->_type != "archivePage" => internalLink->slug.current,\n      "#"\n    ), \n    "#"\n  ),\n  linkType == "external" => coalesce(\n    externalLink.url, "#"\n  )\n)\n\n  },\n  items[]{\n    _key,\n    title,\n    content {\n      text[]{\n        \n...,\nmarkDefs[]{\n  ...,\n  _type == "internalLink" => {\n    "slug": @.reference->slug.current\n  },\n  _type == "externalLink" => {\n    url\n  }\n},\n\n      }\n    }\n  }\n},\n_type == "cardSection" => {\n  title,\n  variant,\n  content {\n    text[]{\n      \n...,\nmarkDefs[]{\n  ...,\n  _type == "internalLink" => {\n    "slug": @.reference->slug.current\n  },\n  _type == "externalLink" => {\n    url\n  }\n},\n\n    }\n  },\n  links[]{\n    _key,\n    \nlabel,\n"href": select(\n  linkType == "internal" => coalesce(\n    select(\n      internalLink->_type == "archivePage" => internalLink->_id, \n      internalLink->_type != "archivePage" => internalLink->slug.current,\n      "#"\n    ), \n    "#"\n  ),\n  linkType == "external" => coalesce(\n    externalLink.url, "#"\n  )\n)\n\n  },\n  cards[]{\n    _key,\n    icon {\n      \nmetadata {\n  inlineSvg,\n  size,\n  color\n}\n\n    },\n    title,\n    content {\n      text[]{\n        \n...,\nmarkDefs[]{\n  ...,\n  _type == "internalLink" => {\n    "slug": @.reference->slug.current\n  },\n  _type == "externalLink" => {\n    url\n  }\n},\n\n      }\n    }\n  }\n},\n_type == "fullWidthImage" => {\n  title,\n  content{\n    text[]{\n      \n...,\nmarkDefs[]{\n  ...,\n  _type == "internalLink" => {\n    "slug": @.reference->slug.current\n  },\n  _type == "externalLink" => {\n    url\n  }\n},\n\n    }\n  },\n  links[]{\n    _key,\n    \nlabel,\n"href": select(\n  linkType == "internal" => coalesce(\n    select(\n      internalLink->_type == "archivePage" => internalLink->_id, \n      internalLink->_type != "archivePage" => internalLink->slug.current,\n      "#"\n    ), \n    "#"\n  ),\n  linkType == "external" => coalesce(\n    externalLink.url, "#"\n  )\n)\n\n  },\n  image {\n    \nasset,\n"metadata": asset->metadata.dimensions,\nhotspot,\ncrop,\nalt,\ncaption\n\n  }\n},\n_type == "fullWidthVideo" => {\n  title,\n  content{\n    text[]{\n      \n...,\nmarkDefs[]{\n  ...,\n  _type == "internalLink" => {\n    "slug": @.reference->slug.current\n  },\n  _type == "externalLink" => {\n    url\n  }\n},\n\n    }\n  },\n  links[]{\n    _key,\n    \nlabel,\n"href": select(\n  linkType == "internal" => coalesce(\n    select(\n      internalLink->_type == "archivePage" => internalLink->_id, \n      internalLink->_type != "archivePage" => internalLink->slug.current,\n      "#"\n    ), \n    "#"\n  ),\n  linkType == "external" => coalesce(\n    externalLink.url, "#"\n  )\n)\n\n  },\n  video {\n    \ntitle,\nthumbnail {\n  \nasset,\n"metadata": asset->metadata.dimensions,\nhotspot,\ncrop,\nalt,\ncaption\n\n},\nvideoUrl\n\n  }\n}\n,\n_type == "globalContent" => {\n  "globalBlock": @.globalBlock->blocks[0]{\n    _key,\n    _type,\n    \n_type == "textMedia" => {\n  title,\n  mediaPlacement,\n  mediaSize,\n  layout,\n  variant,\n  "media": select(\n    mediaType == "image" => image {\n      "_type": "image",\n      \nasset,\n"metadata": asset->metadata.dimensions,\nhotspot,\ncrop,\nalt,\ncaption\n\n    },\n    mediaType == "video" => video {\n      "_type": "video",\n      \ntitle,\nthumbnail {\n  \nasset,\n"metadata": asset->metadata.dimensions,\nhotspot,\ncrop,\nalt,\ncaption\n\n},\nvideoUrl\n\n    }\n  ),\n  content{\n    text[]{\n      \n...,\nmarkDefs[]{\n  ...,\n  _type == "internalLink" => {\n    "slug": @.reference->slug.current\n  },\n  _type == "externalLink" => {\n    url\n  }\n},\n\n    }\n  },\n  links[]{\n    _key,\n    \nlabel,\n"href": select(\n  linkType == "internal" => coalesce(\n    select(\n      internalLink->_type == "archivePage" => internalLink->_id, \n      internalLink->_type != "archivePage" => internalLink->slug.current,\n      "#"\n    ), \n    "#"\n  ),\n  linkType == "external" => coalesce(\n    externalLink.url, "#"\n  )\n)\n\n  }\n},\n_type == "profileInfo" => {\n  title,\n  subtitle,\n  mediaPlacement,\n  mediaSize,\n  layout,\n  variant,\n  "media": select(\n    mediaType == "image" => image {\n      "_type": "image",\n      \nasset,\n"metadata": asset->metadata.dimensions,\nhotspot,\ncrop,\nalt,\ncaption\n\n    },\n    mediaType == "video" => video {\n      "_type": "video",\n      \ntitle,\nthumbnail {\n  \nasset,\n"metadata": asset->metadata.dimensions,\nhotspot,\ncrop,\nalt,\ncaption\n\n},\nvideoUrl\n\n    }\n  ),\n  content{\n    text[]{\n      \n...,\nmarkDefs[]{\n  ...,\n  _type == "internalLink" => {\n    "slug": @.reference->slug.current\n  },\n  _type == "externalLink" => {\n    url\n  }\n},\n\n    }\n  },\n  links[]{\n    _key,\n    \nlabel,\n"href": select(\n  linkType == "internal" => coalesce(\n    select(\n      internalLink->_type == "archivePage" => internalLink->_id, \n      internalLink->_type != "archivePage" => internalLink->slug.current,\n      "#"\n    ), \n    "#"\n  ),\n  linkType == "external" => coalesce(\n    externalLink.url, "#"\n  )\n)\n\n  }\n},\n_type == "textContent" => {\n  title,\n  alignment,\n  variant,\n  layout,\n  content{\n    text[]{\n      \n...,\nmarkDefs[]{\n  ...,\n  _type == "internalLink" => {\n    "slug": @.reference->slug.current\n  },\n  _type == "externalLink" => {\n    url\n  }\n},\n\n    }\n  },\n  links[]{\n    _key,\n    \nlabel,\n"href": select(\n  linkType == "internal" => coalesce(\n    select(\n      internalLink->_type == "archivePage" => internalLink->_id, \n      internalLink->_type != "archivePage" => internalLink->slug.current,\n      "#"\n    ), \n    "#"\n  ),\n  linkType == "external" => coalesce(\n    externalLink.url, "#"\n  )\n)\n\n  }\n},\n_type == "accordionSection" => {\n  title,\n  layout,\n  content {\n    text[]{\n      \n...,\nmarkDefs[]{\n  ...,\n  _type == "internalLink" => {\n    "slug": @.reference->slug.current\n  },\n  _type == "externalLink" => {\n    url\n  }\n},\n\n    }\n  },\n  links[]{\n    _key,\n    \nlabel,\n"href": select(\n  linkType == "internal" => coalesce(\n    select(\n      internalLink->_type == "archivePage" => internalLink->_id, \n      internalLink->_type != "archivePage" => internalLink->slug.current,\n      "#"\n    ), \n    "#"\n  ),\n  linkType == "external" => coalesce(\n    externalLink.url, "#"\n  )\n)\n\n  },\n  items[]{\n    _key,\n    title,\n    content {\n      text[]{\n        \n...,\nmarkDefs[]{\n  ...,\n  _type == "internalLink" => {\n    "slug": @.reference->slug.current\n  },\n  _type == "externalLink" => {\n    url\n  }\n},\n\n      }\n    }\n  }\n},\n_type == "cardSection" => {\n  title,\n  variant,\n  content {\n    text[]{\n      \n...,\nmarkDefs[]{\n  ...,\n  _type == "internalLink" => {\n    "slug": @.reference->slug.current\n  },\n  _type == "externalLink" => {\n    url\n  }\n},\n\n    }\n  },\n  links[]{\n    _key,\n    \nlabel,\n"href": select(\n  linkType == "internal" => coalesce(\n    select(\n      internalLink->_type == "archivePage" => internalLink->_id, \n      internalLink->_type != "archivePage" => internalLink->slug.current,\n      "#"\n    ), \n    "#"\n  ),\n  linkType == "external" => coalesce(\n    externalLink.url, "#"\n  )\n)\n\n  },\n  cards[]{\n    _key,\n    icon {\n      \nmetadata {\n  inlineSvg,\n  size,\n  color\n}\n\n    },\n    title,\n    content {\n      text[]{\n        \n...,\nmarkDefs[]{\n  ...,\n  _type == "internalLink" => {\n    "slug": @.reference->slug.current\n  },\n  _type == "externalLink" => {\n    url\n  }\n},\n\n      }\n    }\n  }\n},\n_type == "fullWidthImage" => {\n  title,\n  content{\n    text[]{\n      \n...,\nmarkDefs[]{\n  ...,\n  _type == "internalLink" => {\n    "slug": @.reference->slug.current\n  },\n  _type == "externalLink" => {\n    url\n  }\n},\n\n    }\n  },\n  links[]{\n    _key,\n    \nlabel,\n"href": select(\n  linkType == "internal" => coalesce(\n    select(\n      internalLink->_type == "archivePage" => internalLink->_id, \n      internalLink->_type != "archivePage" => internalLink->slug.current,\n      "#"\n    ), \n    "#"\n  ),\n  linkType == "external" => coalesce(\n    externalLink.url, "#"\n  )\n)\n\n  },\n  image {\n    \nasset,\n"metadata": asset->metadata.dimensions,\nhotspot,\ncrop,\nalt,\ncaption\n\n  }\n},\n_type == "fullWidthVideo" => {\n  title,\n  content{\n    text[]{\n      \n...,\nmarkDefs[]{\n  ...,\n  _type == "internalLink" => {\n    "slug": @.reference->slug.current\n  },\n  _type == "externalLink" => {\n    url\n  }\n},\n\n    }\n  },\n  links[]{\n    _key,\n    \nlabel,\n"href": select(\n  linkType == "internal" => coalesce(\n    select(\n      internalLink->_type == "archivePage" => internalLink->_id, \n      internalLink->_type != "archivePage" => internalLink->slug.current,\n      "#"\n    ), \n    "#"\n  ),\n  linkType == "external" => coalesce(\n    externalLink.url, "#"\n  )\n)\n\n  },\n  video {\n    \ntitle,\nthumbnail {\n  \nasset,\n"metadata": asset->metadata.dimensions,\nhotspot,\ncrop,\nalt,\ncaption\n\n},\nvideoUrl\n\n  }\n}\n\n  }\n}\n\n          }\n        }\n      ),\n    }': PageQueryResult;
    '*[_type == "frontPage"][0]{\n      _id,\n      _type,\n      title,\n      "content": pageBuilder {\n        _type,\n        blocks[]{\n          \n_key,\n_type,\n\n_type == "textMedia" => {\n  title,\n  mediaPlacement,\n  mediaSize,\n  layout,\n  variant,\n  "media": select(\n    mediaType == "image" => image {\n      "_type": "image",\n      \nasset,\n"metadata": asset->metadata.dimensions,\nhotspot,\ncrop,\nalt,\ncaption\n\n    },\n    mediaType == "video" => video {\n      "_type": "video",\n      \ntitle,\nthumbnail {\n  \nasset,\n"metadata": asset->metadata.dimensions,\nhotspot,\ncrop,\nalt,\ncaption\n\n},\nvideoUrl\n\n    }\n  ),\n  content{\n    text[]{\n      \n...,\nmarkDefs[]{\n  ...,\n  _type == "internalLink" => {\n    "slug": @.reference->slug.current\n  },\n  _type == "externalLink" => {\n    url\n  }\n},\n\n    }\n  },\n  links[]{\n    _key,\n    \nlabel,\n"href": select(\n  linkType == "internal" => coalesce(\n    select(\n      internalLink->_type == "archivePage" => internalLink->_id, \n      internalLink->_type != "archivePage" => internalLink->slug.current,\n      "#"\n    ), \n    "#"\n  ),\n  linkType == "external" => coalesce(\n    externalLink.url, "#"\n  )\n)\n\n  }\n},\n_type == "profileInfo" => {\n  title,\n  subtitle,\n  mediaPlacement,\n  mediaSize,\n  layout,\n  variant,\n  "media": select(\n    mediaType == "image" => image {\n      "_type": "image",\n      \nasset,\n"metadata": asset->metadata.dimensions,\nhotspot,\ncrop,\nalt,\ncaption\n\n    },\n    mediaType == "video" => video {\n      "_type": "video",\n      \ntitle,\nthumbnail {\n  \nasset,\n"metadata": asset->metadata.dimensions,\nhotspot,\ncrop,\nalt,\ncaption\n\n},\nvideoUrl\n\n    }\n  ),\n  content{\n    text[]{\n      \n...,\nmarkDefs[]{\n  ...,\n  _type == "internalLink" => {\n    "slug": @.reference->slug.current\n  },\n  _type == "externalLink" => {\n    url\n  }\n},\n\n    }\n  },\n  links[]{\n    _key,\n    \nlabel,\n"href": select(\n  linkType == "internal" => coalesce(\n    select(\n      internalLink->_type == "archivePage" => internalLink->_id, \n      internalLink->_type != "archivePage" => internalLink->slug.current,\n      "#"\n    ), \n    "#"\n  ),\n  linkType == "external" => coalesce(\n    externalLink.url, "#"\n  )\n)\n\n  }\n},\n_type == "textContent" => {\n  title,\n  alignment,\n  variant,\n  layout,\n  content{\n    text[]{\n      \n...,\nmarkDefs[]{\n  ...,\n  _type == "internalLink" => {\n    "slug": @.reference->slug.current\n  },\n  _type == "externalLink" => {\n    url\n  }\n},\n\n    }\n  },\n  links[]{\n    _key,\n    \nlabel,\n"href": select(\n  linkType == "internal" => coalesce(\n    select(\n      internalLink->_type == "archivePage" => internalLink->_id, \n      internalLink->_type != "archivePage" => internalLink->slug.current,\n      "#"\n    ), \n    "#"\n  ),\n  linkType == "external" => coalesce(\n    externalLink.url, "#"\n  )\n)\n\n  }\n},\n_type == "accordionSection" => {\n  title,\n  layout,\n  content {\n    text[]{\n      \n...,\nmarkDefs[]{\n  ...,\n  _type == "internalLink" => {\n    "slug": @.reference->slug.current\n  },\n  _type == "externalLink" => {\n    url\n  }\n},\n\n    }\n  },\n  links[]{\n    _key,\n    \nlabel,\n"href": select(\n  linkType == "internal" => coalesce(\n    select(\n      internalLink->_type == "archivePage" => internalLink->_id, \n      internalLink->_type != "archivePage" => internalLink->slug.current,\n      "#"\n    ), \n    "#"\n  ),\n  linkType == "external" => coalesce(\n    externalLink.url, "#"\n  )\n)\n\n  },\n  items[]{\n    _key,\n    title,\n    content {\n      text[]{\n        \n...,\nmarkDefs[]{\n  ...,\n  _type == "internalLink" => {\n    "slug": @.reference->slug.current\n  },\n  _type == "externalLink" => {\n    url\n  }\n},\n\n      }\n    }\n  }\n},\n_type == "cardSection" => {\n  title,\n  variant,\n  content {\n    text[]{\n      \n...,\nmarkDefs[]{\n  ...,\n  _type == "internalLink" => {\n    "slug": @.reference->slug.current\n  },\n  _type == "externalLink" => {\n    url\n  }\n},\n\n    }\n  },\n  links[]{\n    _key,\n    \nlabel,\n"href": select(\n  linkType == "internal" => coalesce(\n    select(\n      internalLink->_type == "archivePage" => internalLink->_id, \n      internalLink->_type != "archivePage" => internalLink->slug.current,\n      "#"\n    ), \n    "#"\n  ),\n  linkType == "external" => coalesce(\n    externalLink.url, "#"\n  )\n)\n\n  },\n  cards[]{\n    _key,\n    icon {\n      \nmetadata {\n  inlineSvg,\n  size,\n  color\n}\n\n    },\n    title,\n    content {\n      text[]{\n        \n...,\nmarkDefs[]{\n  ...,\n  _type == "internalLink" => {\n    "slug": @.reference->slug.current\n  },\n  _type == "externalLink" => {\n    url\n  }\n},\n\n      }\n    }\n  }\n},\n_type == "fullWidthImage" => {\n  title,\n  content{\n    text[]{\n      \n...,\nmarkDefs[]{\n  ...,\n  _type == "internalLink" => {\n    "slug": @.reference->slug.current\n  },\n  _type == "externalLink" => {\n    url\n  }\n},\n\n    }\n  },\n  links[]{\n    _key,\n    \nlabel,\n"href": select(\n  linkType == "internal" => coalesce(\n    select(\n      internalLink->_type == "archivePage" => internalLink->_id, \n      internalLink->_type != "archivePage" => internalLink->slug.current,\n      "#"\n    ), \n    "#"\n  ),\n  linkType == "external" => coalesce(\n    externalLink.url, "#"\n  )\n)\n\n  },\n  image {\n    \nasset,\n"metadata": asset->metadata.dimensions,\nhotspot,\ncrop,\nalt,\ncaption\n\n  }\n},\n_type == "fullWidthVideo" => {\n  title,\n  content{\n    text[]{\n      \n...,\nmarkDefs[]{\n  ...,\n  _type == "internalLink" => {\n    "slug": @.reference->slug.current\n  },\n  _type == "externalLink" => {\n    url\n  }\n},\n\n    }\n  },\n  links[]{\n    _key,\n    \nlabel,\n"href": select(\n  linkType == "internal" => coalesce(\n    select(\n      internalLink->_type == "archivePage" => internalLink->_id, \n      internalLink->_type != "archivePage" => internalLink->slug.current,\n      "#"\n    ), \n    "#"\n  ),\n  linkType == "external" => coalesce(\n    externalLink.url, "#"\n  )\n)\n\n  },\n  video {\n    \ntitle,\nthumbnail {\n  \nasset,\n"metadata": asset->metadata.dimensions,\nhotspot,\ncrop,\nalt,\ncaption\n\n},\nvideoUrl\n\n  }\n}\n,\n_type == "globalContent" => {\n  "globalBlock": @.globalBlock->blocks[0]{\n    _key,\n    _type,\n    \n_type == "textMedia" => {\n  title,\n  mediaPlacement,\n  mediaSize,\n  layout,\n  variant,\n  "media": select(\n    mediaType == "image" => image {\n      "_type": "image",\n      \nasset,\n"metadata": asset->metadata.dimensions,\nhotspot,\ncrop,\nalt,\ncaption\n\n    },\n    mediaType == "video" => video {\n      "_type": "video",\n      \ntitle,\nthumbnail {\n  \nasset,\n"metadata": asset->metadata.dimensions,\nhotspot,\ncrop,\nalt,\ncaption\n\n},\nvideoUrl\n\n    }\n  ),\n  content{\n    text[]{\n      \n...,\nmarkDefs[]{\n  ...,\n  _type == "internalLink" => {\n    "slug": @.reference->slug.current\n  },\n  _type == "externalLink" => {\n    url\n  }\n},\n\n    }\n  },\n  links[]{\n    _key,\n    \nlabel,\n"href": select(\n  linkType == "internal" => coalesce(\n    select(\n      internalLink->_type == "archivePage" => internalLink->_id, \n      internalLink->_type != "archivePage" => internalLink->slug.current,\n      "#"\n    ), \n    "#"\n  ),\n  linkType == "external" => coalesce(\n    externalLink.url, "#"\n  )\n)\n\n  }\n},\n_type == "profileInfo" => {\n  title,\n  subtitle,\n  mediaPlacement,\n  mediaSize,\n  layout,\n  variant,\n  "media": select(\n    mediaType == "image" => image {\n      "_type": "image",\n      \nasset,\n"metadata": asset->metadata.dimensions,\nhotspot,\ncrop,\nalt,\ncaption\n\n    },\n    mediaType == "video" => video {\n      "_type": "video",\n      \ntitle,\nthumbnail {\n  \nasset,\n"metadata": asset->metadata.dimensions,\nhotspot,\ncrop,\nalt,\ncaption\n\n},\nvideoUrl\n\n    }\n  ),\n  content{\n    text[]{\n      \n...,\nmarkDefs[]{\n  ...,\n  _type == "internalLink" => {\n    "slug": @.reference->slug.current\n  },\n  _type == "externalLink" => {\n    url\n  }\n},\n\n    }\n  },\n  links[]{\n    _key,\n    \nlabel,\n"href": select(\n  linkType == "internal" => coalesce(\n    select(\n      internalLink->_type == "archivePage" => internalLink->_id, \n      internalLink->_type != "archivePage" => internalLink->slug.current,\n      "#"\n    ), \n    "#"\n  ),\n  linkType == "external" => coalesce(\n    externalLink.url, "#"\n  )\n)\n\n  }\n},\n_type == "textContent" => {\n  title,\n  alignment,\n  variant,\n  layout,\n  content{\n    text[]{\n      \n...,\nmarkDefs[]{\n  ...,\n  _type == "internalLink" => {\n    "slug": @.reference->slug.current\n  },\n  _type == "externalLink" => {\n    url\n  }\n},\n\n    }\n  },\n  links[]{\n    _key,\n    \nlabel,\n"href": select(\n  linkType == "internal" => coalesce(\n    select(\n      internalLink->_type == "archivePage" => internalLink->_id, \n      internalLink->_type != "archivePage" => internalLink->slug.current,\n      "#"\n    ), \n    "#"\n  ),\n  linkType == "external" => coalesce(\n    externalLink.url, "#"\n  )\n)\n\n  }\n},\n_type == "accordionSection" => {\n  title,\n  layout,\n  content {\n    text[]{\n      \n...,\nmarkDefs[]{\n  ...,\n  _type == "internalLink" => {\n    "slug": @.reference->slug.current\n  },\n  _type == "externalLink" => {\n    url\n  }\n},\n\n    }\n  },\n  links[]{\n    _key,\n    \nlabel,\n"href": select(\n  linkType == "internal" => coalesce(\n    select(\n      internalLink->_type == "archivePage" => internalLink->_id, \n      internalLink->_type != "archivePage" => internalLink->slug.current,\n      "#"\n    ), \n    "#"\n  ),\n  linkType == "external" => coalesce(\n    externalLink.url, "#"\n  )\n)\n\n  },\n  items[]{\n    _key,\n    title,\n    content {\n      text[]{\n        \n...,\nmarkDefs[]{\n  ...,\n  _type == "internalLink" => {\n    "slug": @.reference->slug.current\n  },\n  _type == "externalLink" => {\n    url\n  }\n},\n\n      }\n    }\n  }\n},\n_type == "cardSection" => {\n  title,\n  variant,\n  content {\n    text[]{\n      \n...,\nmarkDefs[]{\n  ...,\n  _type == "internalLink" => {\n    "slug": @.reference->slug.current\n  },\n  _type == "externalLink" => {\n    url\n  }\n},\n\n    }\n  },\n  links[]{\n    _key,\n    \nlabel,\n"href": select(\n  linkType == "internal" => coalesce(\n    select(\n      internalLink->_type == "archivePage" => internalLink->_id, \n      internalLink->_type != "archivePage" => internalLink->slug.current,\n      "#"\n    ), \n    "#"\n  ),\n  linkType == "external" => coalesce(\n    externalLink.url, "#"\n  )\n)\n\n  },\n  cards[]{\n    _key,\n    icon {\n      \nmetadata {\n  inlineSvg,\n  size,\n  color\n}\n\n    },\n    title,\n    content {\n      text[]{\n        \n...,\nmarkDefs[]{\n  ...,\n  _type == "internalLink" => {\n    "slug": @.reference->slug.current\n  },\n  _type == "externalLink" => {\n    url\n  }\n},\n\n      }\n    }\n  }\n},\n_type == "fullWidthImage" => {\n  title,\n  content{\n    text[]{\n      \n...,\nmarkDefs[]{\n  ...,\n  _type == "internalLink" => {\n    "slug": @.reference->slug.current\n  },\n  _type == "externalLink" => {\n    url\n  }\n},\n\n    }\n  },\n  links[]{\n    _key,\n    \nlabel,\n"href": select(\n  linkType == "internal" => coalesce(\n    select(\n      internalLink->_type == "archivePage" => internalLink->_id, \n      internalLink->_type != "archivePage" => internalLink->slug.current,\n      "#"\n    ), \n    "#"\n  ),\n  linkType == "external" => coalesce(\n    externalLink.url, "#"\n  )\n)\n\n  },\n  image {\n    \nasset,\n"metadata": asset->metadata.dimensions,\nhotspot,\ncrop,\nalt,\ncaption\n\n  }\n},\n_type == "fullWidthVideo" => {\n  title,\n  content{\n    text[]{\n      \n...,\nmarkDefs[]{\n  ...,\n  _type == "internalLink" => {\n    "slug": @.reference->slug.current\n  },\n  _type == "externalLink" => {\n    url\n  }\n},\n\n    }\n  },\n  links[]{\n    _key,\n    \nlabel,\n"href": select(\n  linkType == "internal" => coalesce(\n    select(\n      internalLink->_type == "archivePage" => internalLink->_id, \n      internalLink->_type != "archivePage" => internalLink->slug.current,\n      "#"\n    ), \n    "#"\n  ),\n  linkType == "external" => coalesce(\n    externalLink.url, "#"\n  )\n)\n\n  },\n  video {\n    \ntitle,\nthumbnail {\n  \nasset,\n"metadata": asset->metadata.dimensions,\nhotspot,\ncrop,\nalt,\ncaption\n\n},\nvideoUrl\n\n  }\n}\n\n  }\n}\n\n        }\n      }\n    }': HomePageQueryResult;
    '*[_type == "post" && slug.current == $slug][0]{\n    title,\n     "tag": tags[0]->title,\n     _createdAt,\n    featuredImage {\n      \nasset,\n"metadata": asset->metadata.dimensions,\nhotspot,\ncrop,\nalt,\ncaption\n\n    },\n    content {\n      text[]{\n        \n...,\nmarkDefs[]{\n  ...,\n  _type == "internalLink" => {\n    "slug": @.reference->slug.current\n  },\n  _type == "externalLink" => {\n    url\n  }\n},\n_type == "image" => {\n  \nasset,\n"metadata": asset->metadata.dimensions,\nhotspot,\ncrop,\nalt,\ncaption\n\n},\n_type == "video" => {\n  \ntitle,\nthumbnail {\n  \nasset,\n"metadata": asset->metadata.dimensions,\nhotspot,\ncrop,\nalt,\ncaption\n\n},\nvideoUrl\n\n},\n_type == "accordion" => {\n  \ntitle,\nitems[]{\n  _key,\n  title,\n  content{\n    text[]{\n      \n...,\nmarkDefs[]{\n  ...,\n  _type == "internalLink" => {\n    "slug": @.reference->slug.current\n  },\n  _type == "externalLink" => {\n    url\n  }\n},\n\n    }\n  }\n}\n\n}\n\n      }\n    }\n  }': PostQueryResult;
    '*[_type == "post"]|order(_createdAt desc)[$start...$limit]{\n      _id,\n      title,\n      slug,\n      _createdAt,\n      featuredImage {\n        \nasset,\n"metadata": asset->metadata.dimensions,\nhotspot,\ncrop,\nalt,\ncaption\n\n      },\n      "excerpt": pt::text(content.text[0]),\n      "tag": tags[0]->title\n    }': PostsQueryResult;
    '*[_type == "archivePage" && _id == $id][0]{\n        title,\n        "slug": slug.current,\n        description {\n          text[]{\n            \n...,\nmarkDefs[]{\n  ...,\n  _type == "internalLink" => {\n    "slug": @.reference->slug.current\n  },\n  _type == "externalLink" => {\n    url\n  }\n},\n\n          }\n        },\n        "total": round(count(*[_type == "post"]) / $perPage)\n      }\n    ': ArchiveDataResult;
  }
}
